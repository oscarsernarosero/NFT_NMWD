{"version":3,"sources":["components/NewUri/NewUri.js","components/Gallery/uri_constants.js","uris sync /^/.//.*/.json$","components/NewUri/uri_constants.js","components/TokenContract/mint.js","components/TokenContract/TokenByIndex.js","components/TokenContract/IdToOwnerIndex.js","components/TokenContract/GetOwnerOf.js","components/TokenContract/TokenURI.js","components/TokenContract/Approve.js","components/TokenContract/SetApprovalForAll.js","components/TokenContract/TransferNMWD.js","components/TokenContract/TransferFrom.js","components/TokenContract/TokenMessage.js","components/TokenContract/SetTokenMessage.js","components/TransactionErrorMessage.js","components/WaitingForTransactionMessage.js","components/TokenContract/TokenContract.js","components/Header/NavItems.js","components/Header/NavBar.js","components/Header/WalletStatus.js","components/Marketplace/TransferOwnership.js","components/Marketplace/MarketPlaceApprove.js","components/Marketplace/Purchase.js","components/Marketplace/SetPrice.js","components/Marketplace/MintThroughPurchase.js","components/Marketplace/UpdateNMWDContract.js","components/Marketplace/MarketPlaceHead.js","components/Marketplace/GetPrice.js","components/Marketplace/GetBackOwnership.js","components/Marketplace/GetUserBalance.js","components/Marketplace/GetContractBalance.js","components/Marketplace/WithdrawUserFunds.js","components/Marketplace/WithdrawFromContract.js","components/Marketplace/SetForSale.js","components/Marketplace/GetForSale.js","components/Marketplace/InitializeContracts.js","components/Marketplace/Marketplace.js","components/Info/LeftImage.js","components/Info/RightImage.js","components/Info/Buttons.js","components/Info/Home.js","components/Info/ThreeElements.js","components/Info/Overview.js","components/Gallery/Filter.js","components/Generics/ViewOnEtherscan.js","components/Generics/WaitingForComfirmation.js","components/Generics/LiveBlockchainStatus.js","components/MyWallet/ChangePrice.js","components/Generics/Popup.js","components/MyWallet/Transfer.js","components/Gallery/ImageNFT.js","components/Gallery/Carousel.js","components/Gallery/PaginationNFTs.js","components/Gallery/PaginationForMinting.js","components/Gallery/ForMinting.js","components/Gallery/Gallery.js","components/MyWallet/MyNFTs.js","components/MyWallet/MyWallet.js","components/MyWallet/Balance.js","components/MyWallet/SetMessage.js","components/Dapp.js","index.js"],"names":["DB","require","CONST","TOPIC","LANGUAGE","NewUri","props","generalTopics","peopleTopics","countryTopics","drugKind","artists","topics","topic","Object","entries","artist","map","index","key","push","console","log","reversedTOPIC","value","nTopics","str_topic","parseInt","ntopic","state","description","name","langauge","imageCID","artist_webpage","selectedTopics","royatyPct","selectedArtists","drugTopic","royaltyAddress","external_url","pinataSecret","pinataKey","handleDescription","bind","handleLanguage","handleImageCID","handleArtist","handleArtistWebpage","handleTopics","handleRoyaltyPct","handleRoyaltyAddress","handleExternalUrl","handleName","handlePinataSecret","handlePinataKey","handleSubmit","show","descriptionInput","React","createRef","languageInput","imageCIDInput","artistInput","artistWebpageInput","topicsInput","royaltyPctInput","royaltyAddressInput","externalUrlInput","nameInput","pinataSecretInput","pinataKeyInput","event","this","setState","target","checked","filter","preventDefault","topicVisible","fs","config","contractsDir","__dirname","pinataSDK","pinata","length","language","EN","ES","uri","image","attributes","webpage","royalties","pctValue","royaltyPct","address","safe_name","replace","json_uri","JSON","stringify","undefined","writeFile","testAuthentication","then","result","catch","err","body","options","pinataMetadata","pinataOptions","cidVersion","pinJSONToIPFS","className","onSubmit","type","onChange","ref","required","onClick","drug","person","country","Component","exports","ECSTASY","OPIUM","MORPHINE","COCAINE","HEROIN","ALCOHOL","CANNABIS","AMPHETAMINES","METAMPHETAMINES","LSD","GEOPOLITICS","RACISM","POLITICS","WORLD_WAR_1","WORLD_WAR_2","ECONOMICS","SCIENCE","HISTORY","SHAM","HARRY_ANSLINGER","RICHARD_NIXON","COLOMBIA","MEXICO","US","CANADA","GERMANY","CHINA","UK","FRANCE","ITALY","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","Mint","tokenId","to","txHash","royaltyRecipient","royaltyValue","handleChangeId","handleChangeTo","handleChangeRoyaltyRecipient","handleChangeUri","handleChangeRoyaltyValue","toInput","idInput","royaltyRecepientInput","royaltyValueInput","uriInput","royaltyRecepient","toFixed","mint","tx","error","hash","current","owner","step","TokenByIndex","NaN","handleChange","alert","tokenByIndex","_hex","IdToOwnerIndex","handleChangeOwner","handleChangeIndex","idToOwnerIndex","GetOwnerOf","getOwnerOf","TokenURI","tokenURI","Approve","msg","handleChangeAddress","approve","SetApprovalForAll","operator","handleChangeOperator","setApprovalForAll","TransferNMWD","safeTransferFrom","TransferFrom","ownerInput","TokenMessage","message","tokenMessage","SetTokenMessage","handleChangeMsg","msgInput","setTokenMessage","TransactionErrorMessage","dismiss","role","substring","data-dismiss","aria-label","aria-hidden","WaitingForTransactionMessage","TokenContract","selectedAddress","txBeingSent","transactionError","_getRpcErrorMessage","_dismissTransactionError","_tokenId","_msg","_to","_uri","_mint","NavItems","title","link","NavBar","clicked","handleClick","data-text","item","WalletStatus","window","ethereum","connectWallet","style","verticalAlign","connected","substr","TransferOwnership","transferOwnership","MarketPlaceApprove","marketPlaceApprove","Purchase","getPrice","rawPrice","price","abi","iface","ethers","utils","Interface","data","encodeFunctionData","params","from","marketPlaceAddress","request","method","SetPrice","handleChangePrice","priceInput","toString","setPrice","MintThroughPurchase","UpdateNMWDContract","updateNMWDContract","MarketPlaceHead","GetPrice","GetBackOwnership","getBackOwnership","GetUserBalance","balance","getUserBalance","GetContractBalance","getContractBalance","WithdrawUserFunds","amount","getMax","max","withdrawUserFunds","WithdrawFromContract","getMyAddress","myAddress","withdrawFromContract","SetForSale","forSale","handleChangeForSale","setForSale","GetForSale","getForSale","_forSale","InitializeContracts","NFTAddress","MarketplaceAddress","a","Marketplace","approveNMWD","of","_address","MarketPlaceAddress","LeftImage","backgroundImage","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundColor","src","alt","text","RightImage","Buttons","gallery","currentUrl","location","href","Home","ThreeElements","leftTitle","leftText","middleTitle","middleText","rightTitle","rightText","Overview","Filter","byTopics","literal","applyFilter","fontSize","ViewOnEtherscan","rel","WaitingForComfirmation","close","waiting","color","height","width","LiveBlockchainStatus","successful","ChangePrice","newPrice","handleChangenewPrice","container","Math","floor","waitForMinedConfirmation","ms","Promise","setTimeout","res","visible","Popup","Transfer","my_address","safeTransfer","ImageNFT","changePriceVisble","popupVisible","transferVisble","buy","setSelectedId","buyDisable","changePrice","closeChangePrice","closePopup","closeTransfer","transfer","reloadWallet","useHistory","CID","pinata_image_url","parseFloat","forMint","mywallet","owned","pathname","tx_hash","func","Carousel","fn","background","active","displayQuantityOfSide","infiniteScroll","enableHeading","otherFigureScale","currentFigureScale","enableScroll","nfts","PaginationNFTs","mounted","page","ids","myIds","filteredIds","pageSize","view","filterBy","changeCurrentPage","listView","albumView","filterNFTs","sleep","getNFTids","getNFTidsByAddress","_id","getPageData","prevProps","_byTopic","_byArtist","_byLanguage","thisTopic","thisArtist","filteredByTopic","filteredByArtist","filteredByLanguage","filteredResult","_topic","Set","_artist","x","includes","finalResult","numPage","startAt","endAt","pageIds","slice","i","getNFTData","getAllNFTsIdsOnly","imageUrl","currentPage","sizePerPage","totalSize","PaginationForMinting","ids_to_mint","nftsForMint","toLowerCase","ForMinting","files","Gallery","MyNFTs","MyWallet","getNFTsByAddress","SetMessage","count","walletUrl","rows","cols","maxLength","placeholder","Dapp","initialState","tokenData","networkError","index_Id","_connectWallet","_dismissNetworkError","path","exact","component","render","NMWDAddress","Token","getAllNFTs","selectedId","_initialize","on","newAddress","_resetState","_chainId","userAddress","_intializeEthers","getContractOwner","_getTokenData","_provider","providers","Web3Provider","_nmwd","Contract","NMWDArtifact","getSigner","marketPlace","MarketPlaceArtifact","once","tokenOfOwnerByIndex","ownerOf","royaltyInfo","wait","pinata_uri_url","fetch","response","jsonData","parse","getMarketPlaceBalance","updateNMWDcontract","more","counter","_pollDataInterval","setInterval","_updateBalance","clearInterval","symbol","_token","balanceOf","status","networkVersion","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bb91953.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../style/filter.css\";\nconst fs = require(\"fs\");\nconst DB = require(\"../../localDB/attributes.json\");\nconst CONST = require('./uri_constants');\nconst TOPIC = CONST.TOPIC;\nconst LANGUAGE = CONST.LANGUAGE;\n\n\n  export class NewUri extends React.Component{\n\n    constructor(props){\n      super(props);\n      const generalTopics=[];\n        const peopleTopics=[];\n        const countryTopics=[];\n        const drugKind=[];\n        const artists=[];\n        const topics = DB.topic;\n\n        Object.entries(DB.artist).map(([key,value], index) => {\n          artists.push(key);\n      });\n\n        console.log(\"topics\",topics);\n        let reversedTOPIC = {};\n        Object.entries(TOPIC).map(([value,key], index) => {\n            reversedTOPIC[key]= value;\n        });\n        console.log(\"reversedTOPIC\", reversedTOPIC);\n        const nTopics = Object.entries(topics).map((str_topic) => {\n            return parseInt(str_topic);\n        });\n        console.log(\"nTopics\",nTopics);\n        nTopics.map( (ntopic) => {\n            if(ntopic<20){\n                drugKind.push(reversedTOPIC[ntopic]);\n            }else if(ntopic>=20 && ntopic <40){\n                generalTopics.push(reversedTOPIC[ntopic]);\n            }else if(ntopic>=40 && ntopic <60){\n                peopleTopics.push(reversedTOPIC[ntopic]);\n            }else if(ntopic>=60 && ntopic <100){\n                countryTopics.push(reversedTOPIC[ntopic]);\n            }else{\n                throw(\"corrupted database\");\n            }\n        });\n        console.log(\"drugKind\",drugKind);\n        console.log(\"generalTopics\",generalTopics);\n        console.log(\"peopleTopics\",peopleTopics);\n        console.log(\"countryTopics\",countryTopics);\n\n     \n  \n      this.state = {description:\"\", name:\"\", langauge:-1,\n                    imageCID:\"\",artist:\"\",artist_webpage:\"\",\n                    selectedTopics:[],royatyPct:8.00, \n                    generalTopics:generalTopics,\n                    peopleTopics:peopleTopics,\n                    countryTopics:countryTopics,\n                    artists:artists, selectedArtists:[],\n                    drugTopic:drugKind,\n                    royaltyAddress:\"0x0x44E2c3503572B9bb359DA5b38c7B057c95D7CD01\", \n                    external_url:\"warondrugsisasham.eth.link\",\n                    pinataSecret:\"\", pinataKey:\"\"};\n  \n      this.handleDescription = this.handleDescription.bind(this);\n      this.handleLanguage = this.handleLanguage.bind(this);\n      this.handleImageCID= this.handleImageCID.bind(this);\n      this.handleArtist = this.handleArtist.bind(this);\n      this.handleArtistWebpage = this.handleArtistWebpage.bind(this);\n      this.handleTopics = this.handleTopics.bind(this);\n      this.handleRoyaltyPct = this.handleRoyaltyPct.bind(this);\n      this.handleRoyaltyAddress = this.handleRoyaltyAddress.bind(this);\n      this.handleExternalUrl = this.handleExternalUrl.bind(this);\n      this.handleName = this.handleName.bind(this);\n      this.handlePinataSecret = this.handlePinataSecret.bind(this);\n      this.handlePinataKey = this.handlePinataKey.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.show = this.show.bind(this);\n        \n      this.descriptionInput = React.createRef();\n      this.languageInput = React.createRef();\n      this.imageCIDInput = React.createRef();\n      this.artistInput = React.createRef();\n      this.artistWebpageInput = React.createRef();\n      this.topicsInput = React.createRef();\n      this.royaltyPctInput = React.createRef();\n      this.royaltyAddressInput = React.createRef();\n      this.externalUrlInput = React.createRef();\n      this.nameInput = React.createRef();\n      this.pinataSecretInput = React.createRef();\n      this.pinataKeyInput = React.createRef();\n\n      console.log(this.state);\n    }\n\n    handleDescription(event) {\n      this.setState({description: event.target.value});\n    }\n\n    handleLanguage(event) {\n      this.setState({langauge: event.target.value});\n    }\n\n    handleImageCID(event) {\n      this.setState({imageCID: event.target.value});\n    }\n\n    handleName(event) {\n        this.setState({name: event.target.value});\n    }\n\n    async handleArtist(event) {\n      let checked = this.state.selectedArtists;\n      if(event.target.checked){\n          checked.push(event.target.value);\n      }else{\n          checked = checked.filter( value => value != event.target.value );\n      }\n      await this.setState({selectedArtists:checked});\n      console.log(\"this.state.selectedArtists\",this.state.selectedArtists);\n      console.log(\"ids of first artist\",DB.artist[this.state.selectedArtists[0]]);\n\n    }\n\n    handleArtistWebpage(event) {\n\n    this.setState({artist_webpage: event.target.value});\n    }\n\n    async handleTopics(event) {\n      let checked = this.state.selectedTopics;\n      if(event.target.checked){\n          checked.push(event.target.value);\n      }else{\n          checked = checked.filter( value => value != event.target.value );\n      }\n      await this.setState({selectedTopics:checked});\n      console.log(\"this.state.selectedTopics\",this.state.selectedTopics);\n      console.log(\"FIRST TOPIC value\",TOPIC[this.state.selectedTopics[0]]);\n      console.log(\"ids of first topic\",DB.topic[TOPIC[this.state.selectedTopics[0]]]);\n    }\n\n    handleRoyaltyPct(event) {\n    this.setState({royatyPct: event.target.value});\n    }\n\n    handleRoyaltyAddress(event) {\n    this.setState({royaltyAddress: event.target.value});\n    }\n\n    handleExternalUrl(event) {\n    this.setState({external_url: event.target.value});\n    }\n\n    handlePinataSecret(event) {\n      this.setState({pinataSecret: event.target.value});\n    }\n\n    handlePinataKey(event) {\n      this.setState({pinataKey: event.target.value});\n    }\n\n    show(event){\n      event.preventDefault();\n      this.setState({topicVisible: !this.state.topicVisible});\n  }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        const fs = require(\"browserify-fs\");\n        require('dotenv').config();\n        const contractsDir = __dirname+\"/../uris\";\n        const pinataSDK = require('@pinata/sdk');\n        const pinata = pinataSDK(this.state.pinataKey, this.state.pinataSecret);\n\n\n        if(this.state.selectedTopics.length==0){\n            throw(\"topics must be an array with at least 1 topic\");\n        }\n        if( this.state.language !== LANGUAGE.EN  &&  this.state.language !== LANGUAGE.ES ){\n            throw(\"There are only 2 languages availabe: EN and ES\");\n        }\n\n        const uri = {\n            description: this.state.description,\n            external_url: this.state.external_url,\n            image: \"ipfs://\"+this.state.imageCID,\n            name: this.state.name,\n            attributes: {\n                artist: this.state.artist,\n                webpage: this.state.artist_webpage,\n                topics: this.state.selectedTopics,\n                language: this.state.language\n            },\n            royalties: {\n                pctValue: this.state.royaltyPct,\n                address: this.state.royaltyAddress\n            }\n        }\n\n        //saving the file into ../uris dir.\n        const safe_name = this.state.name.replace(/ /g,\"_\");\n        const json_uri = JSON.stringify(uri, undefined, 0);\n        fs.writeFile( contractsDir+\"/\"+safe_name+\".json\",json_uri);\n\n        pinata.testAuthentication().then((result) => {\n            //handle successful authentication here\n            console.log(result);\n        }).catch((err) => {\n            //handle error here\n            console.log(err);\n        });\n\n        const body = { uri };\n        const options = {\n          pinataMetadata: {\n            name: safe_name\n          },\n            pinataOptions: {\n                cidVersion: 1\n            }\n        };\n        pinata.pinJSONToIPFS(body, options).then((result) => {\n            //handle results here\n            console.log(\"from pinning: \",result);\n        }).catch((err) => {\n            //handle error here\n            console.log(err);\n        });\n    }\n\n    render(){\n      \n      return (\n        <div>\n          <h4 className=\"component-title\">Create A New URI</h4>\n          <form\n            onSubmit={this.handleSubmit} >\n            <div className=\"form-group\">\n              <label>Name Of The NFT: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"name\"\n                onChange={this.handleName}\n                ref={this.nameInput}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Description Of The NFT: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"description\"\n                onChange={this.handleDescription}\n                ref={this.descriptionInput}\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label>Image CID: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"  \n                name=\"imageCID\"\n                onChange={this.handleImageCID}\n                ref={this.imageCIDInput}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Artist: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"  \n                name=\"artist\"\n                onChange={this.handleArtist}\n                ref={this.artistInput}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Artist Webpage: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"  \n                name=\"artistWebpage\"\n                onChange={this.handleArtistWebpage}\n                ref={this.artistWebpageInput}\n              />\n            </div>\n            <button onClick={this.show} className=\"topic-button\">Filter </button>\n            <div className={this.state.topicVisible? \"\": \"dont-show\"}>\n                <div className=\"filter-menu\">\n                  <div className=\"filter-category\">\n                      <label className=\"topic-title\">By drug kind:</label>\n                      \n                              <div className=\"topic-options\">\n                                      {this.state.drugTopic.map((drug, index) => {\n                                          return  <div key={index}>\n                                                  <input \n                                                  type=\"checkbox\" \n                                                  name=\"topic\" \n                                                  value={drug}\n                                                  onChange={this.handleTopics}\n                                                  /> \n                                                  {drug}\n                                                  </div>\n                                      })\n                                      }\n                              </div>\n                      \n                  </div> \n\n                  <div className=\"filter-category\">\n                  <label className=\"topic-title\">By historical character:</label>\n                    <div className={this.state.topicVisible? \"\": \"dont-show\"}>\n                      <div className=\"topic-options\">\n                              {this.state.peopleTopics.map((person,index) => {\n                                  return  <div key={index}>\n                                          <input \n                                          type=\"checkbox\" \n                                          name=\"topic\" \n                                          value={person}\n                                          onChange={this.handleTopics}\n                                          /> \n                                          {person}\n                                          </div>\n                              })\n                              }\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"filter-category\">\n                    <label className=\"topic-title\">By country reference:</label>\n                      <div className={this.state.topicVisible? \"\": \"dont-show\"}>\n                              <div className=\"topic-options\">\n                                      {this.state.countryTopics.map((country, index) => {\n                                          return  <div key={index}>\n                                                  <input \n                                                  type=\"checkbox\" \n                                                  name=\"topic\" \n                                                  value={country}\n                                                  onChange={this.handleTopics}\n                                                  /> \n                                                  {country}\n                                                  </div>\n                                      })\n                                      }\n                              </div>\n                      </div>\n                  </div> \n\n                  <div className=\"filter-category\">\n                  <label className=\"topic-title\">By general topic:</label>\n                      <div className={this.state.topicVisible? \"\": \"dont-show\"}>\n                              <div className=\"topic-options\">\n                                      {this.state.generalTopics.map((topic, index) => {\n                                          return  <div key={index}>\n                                                  <input \n                                                  type=\"checkbox\" \n                                                  name=\"topic\" \n                                                  value={topic}\n                                                  onChange={this.handleTopics}\n                                                  /> \n                                                  {topic}\n                                                  </div>\n                                      })\n                                      }\n                              </div>\n                      </div>\n                  </div> \n\n                  <div className=\"filter-category\">\n                    <label className=\"topic-title\">By artist:</label>\n                      <div className={this.state.topicVisible? \"\": \"dont-show\"}>\n                              <div className=\"topic-options\">\n                                      {this.state.artists.map((artist, index) => {\n                                          return  <div key={index}>\n                                                  <input \n                                                  type=\"checkbox\" \n                                                  name=\"topic\" \n                                                  value={artist}\n                                                  onChange={this.handleArtist}\n                                                  /> \n                                                  {artist}\n                                                  </div>\n                                      })\n                                      }\n                              </div>\n                      </div>\n                  </div> \n\n                  <div className=\"filter-category\">\n                  <label>Language The NFT Is In: </label>\n                  <select \n                    value={this.state.languageInput} \n                    onChange={this.handleLanguage}\n                    className=\"\"\n                    required\n                    >   \n                        <option value={-1}>All</option>\n                        {LANGUAGE.map((language, value)=>{\n                            return <option value={value}>{language}</option>\n                        })}\n                    </select>\n                  </div>\n              </div>\n\n             </div>\n            \n            \n            \n            <div className=\"form-group\">\n              <input className=\"btn btn-primary\" type=\"submit\" value=\"Create URI\" />\n            </div>\n          </form>\n        </div>\n      );\n     }\n}\n","const TOPIC = {\n    //DRUGS FROM 1-19\n    ECSTASY: 1,\n    OPIUM: 2,\n    MORPHINE: 3,\n    COCAINE: 4,\n    HEROIN: 5,\n    ALCOHOL: 6,\n    CANNABIS: 7,\n    AMPHETAMINES: 8,\n    METAMPHETAMINES: 9,\n    LSD: 10,\n    //GENERIC TOPIS 20-39\n    GEOPOLITICS: 20,\n    RACISM: 21,\n    POLITICS: 22,\n    WORLD_WAR_1: 23,\n    WORLD_WAR_2: 24,\n    ECONOMICS: 25,\n    SCIENCE: 26,\n    HISTORY: 27,\n    SHAM: 28,\n    //HISTORICAL CHARACTERS 40-59\n    HARRY_ANSLINGER: 40,\n    RICHARD_NIXON: 41,\n    //COUNTRIES 60-99\n    COLOMBIA: 60,\n    MEXICO: 61,\n    US: 62,\n    CANADA: 63,\n    GERMANY: 64,\n    CHINA: 65,\n    UK: 66,\n    FRANCE: 67,\n    ITALY: 68\n}\n\nconst LANGUAGE = [\n    \"Español\",\n    \"English\"\n]\nexports.LANGUAGE = LANGUAGE;\nexports.TOPIC = TOPIC;\n","var map = {\n\t\"./Abelardo_Rodriguez_And_His_Friends.json\": 224,\n\t\"./Abelardo_Rodriguez_Y_Sus_Amigos.json\": 225,\n\t\"./British_Greed.json\": 226,\n\t\"./Chinese_Humilliation.json\": 227,\n\t\"./La_Avaricia_Britanica.json\": 228,\n\t\"./La_Humillacion_China.json\": 229\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 223;","const TOPIC = {\n    //DRUGS FROM 1-19\n    ECSTASY: 1,\n    OPIUM: 2,\n    MORPHINE: 3,\n    COCAINE: 4,\n    HEROIN: 5,\n    ALCOHOL: 6,\n    CANNABIS: 7,\n    AMPHETAMINES: 8,\n    METAMPHETAMINES: 9,\n    LSD: 10,\n    //GENERIC TOPIS 20-39\n    GEOPOLITICS: 20,\n    RACISM: 21,\n    POLITICS: 22,\n    WORLD_WAR_1: 23,\n    WORLD_WAR_2: 24,\n    ECONOMICS: 25,\n    SCIENCE: 26,\n    HISTORY: 27,\n    SHAM: 28,\n    //HISTORICAL CHARACTERS 40-59\n    HARRY_ANSLINGER: 40,\n    RICHARD_NIXON: 41,\n    //COUNTRIES 60-99\n    COLOMBIA: 60,\n    MEXICO: 61,\n    US: 62,\n    CANADA: 63,\n    GERMANY: 64,\n    CHINA: 65,\n    UK: 66,\n    FRANCE: 67,\n    ITALY: 68\n}\n\nconst LANGUAGE = [\n    \"Español\",\n    \"English\"\n]\nexports.LANGUAGE = LANGUAGE;\nexports.TOPIC = TOPIC;\n","import { isAddress } from \"ethers/lib/utils\";\nimport React from \"react\";\n\n//export function Mint({ mint, owner}) {\n  export class Mint extends React.Component{\n\n    constructor(props){\n      super(props);\n      this.state = {tokenId: \"\", uri: \"\", to: \"\", txHash: \"\", \n                    royaltyRecipient: 0, royaltyValue: 0};\n  \n      this.handleChangeId = this.handleChangeId.bind(this);\n      this.handleChangeTo = this.handleChangeTo.bind(this);\n      this.handleChangeRoyaltyRecipient = this.handleChangeRoyaltyRecipient.bind(this);\n      this.handleChangeUri = this.handleChangeUri.bind(this);\n      this.handleChangeRoyaltyValue = this.handleChangeRoyaltyValue.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n  \n      this.toInput = React.createRef();\n      this.idInput = React.createRef();\n      this.royaltyRecepientInput = React.createRef();\n      this.royaltyValueInput = React.createRef();\n       this.uriInput = React.createRef();\n   \n    }\n\n    handleChangeId(event) {\n      this.setState({tokenId: event.target.value});\n    }\n  \n    handleChangeTo(event) {\n      this.setState({to: event.target.value});\n    }\n  \n    handleChangeRoyaltyRecipient(event) {\n      this.setState({royaltyRecepient: event.target.value});\n    }\n\n    handleChangeUri(event) {\n      this.setState({uri: event.target.value});\n    }\n  \n    handleChangeRoyaltyValue(event) {\n      this.setState({royaltyValue: event.target.value});\n    }\n\n    async handleSubmit(event) {\n      event.preventDefault();\n      const tokenId = this.state.tokenId;\n      const royaltyRecepient = this.state.royaltyRecepient;\n      const to = this.state.to;\n      const uri = this.state.uri;\n      const royaltyValue = this.state.royaltyValue.toFixed(2) * 100;\n\n      console.log(to, tokenId, uri);\n      \n      console.log(this.props);\n      console.log(this.props.mint)\n      const tx =  await this.props.mint(to, tokenId, uri, royaltyRecepient, royaltyValue);\n      console.log(tx);\n      if(tx.error){\n          this.setState({txHash: tx.error});\n          console.log(\"failed.\");\n      }else{\n          this.setState({txHash: \"Last minting succeded with tx hash: \"+tx.hash});\n          console.log(\"success!\", tx.hash);\n          this.toInput.current.value = \"\";\n          this.idInput.current.value = \"\";\n           this.royaltyRecepientInput.current.value = \"\";\n          this.uriInput.current.value = \"\";\n          this.royaltyValueInput.current.value = \"\";\n      }\n      \n    }\n\n    render(){\n      \n      return (\n        <div>\n          <h4>Mint</h4>\n          <h5>Owner: {this.props.owner}</h5>\n          <form\n            onSubmit={this.handleSubmit} >\n            <div className=\"form-group\">\n              <label>Token Id: </label>\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                step=\"1\"\n                name=\"Id\"\n                onChange={this.handleChangeId}\n                ref={this.idInput}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Recipient address</label>\n              <input className=\"form-control\" type=\"text\" name=\"to\" ref={this.toInput} onChange={this.handleChangeTo} required />\n            </div>\n            <div className=\"form-group\">\n              <label>Uri</label>\n              <input className=\"form-control\" type=\"text\" name=\"uri\" ref={this.uriInput} onChange={this.handleChangeUri} required />\n               <label>Royalty address</label>\n              <input className=\"form-control\" type=\"text\" name=\"alias\" ref={this.royaltyRecepientInput} onChange={this.handleChangeRoyaltyRecipient} required />\n              <label>Royalty Value (Percentage. MAX 2 decimals)</label>\n              <input className=\"form-control\" type=\"number\" step=\"0.01\" name=\"royaltyValue\" ref={this.royaltyValueInput}  onChange={this.handleChangeRoyaltyValue} required /> \n              <label name = \"response\"> {this.state.txHash}</label>\n            </div>\n            <div className=\"form-group\">\n              <input className=\"btn btn-primary\" type=\"submit\" value=\"Mint\" />\n            </div>\n          </form>\n        </div>\n      );\n     }\n}\n","import React from \"react\";\n\nexport  class TokenByIndex extends React.Component{\n\n  constructor( props ){\n    super(props);\n    this.state = {tokenId: \" \", index: NaN};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({index: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    alert('An index was submitted: ' + this.state.index);\n    event.preventDefault();\n    const index = this.state.index;\n\n    if (index) {\n      this.setState({tokenId: \"...\"})\n      const tokenId = await this.props.tokenByIndex(index);\n      console.log(\"got id..\", tokenId);\n      if(tokenId._hex){\n        this.setState({tokenId: parseInt(tokenId._hex)})\n      }else{\n        this.setState({tokenId: tokenId.error})\n      }\n      \n    }\n  }\n\n  render(){\n    return (\n      <div>\n        <h4>Id of NFT by index</h4>\n        <form onSubmit={this.handleSubmit} >\n          <div className=\"form-group\">\n            <label>Token index: </label>\n            <input\n              className=\"form-control\"\n              type=\"number\"\n              step=\"1\"\n              name=\"Index\"\n              required\n              onChange={this.handleChange}\n            />\n            <label name = \"index-Id\">Id: {this.state.tokenId}</label>\n          </div>\n          <div className=\"form-group\">\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Get Id\" />\n          </div>\n        </form>\n      </div>\n    );\n  };\n}","import React from \"react\";\n\nexport class IdToOwnerIndex extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \" \", index: NaN, owner: \" \"};\n\n    this.handleChangeOwner = this.handleChangeOwner.bind(this);\n    this.handleChangeIndex = this.handleChangeIndex.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  handleChangeOwner(event) {\n    this.setState({owner: event.target.value});\n  }\n\n  handleChangeIndex(event) {\n    this.setState({index: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const owner = this.state.owner;\n    const index = this.state.index;\n\n\n    if (owner && index) {\n      this.setState({tokenId: \"...\"})\n      const tokenId =  await this.props.idToOwnerIndex(owner, index);\n      console.log(\"got id: \",tokenId);\n      if(tokenId._hex){\n        this.setState({tokenId: parseInt(tokenId)});\n      }else{\n        this.setState({tokenId: \"Invalid input.\"});\n      }\n    }\n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4>Id of NfT by Index in Owner List </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        <label>Owner address: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"Owner\"\n            onChange={this.handleChangeOwner}\n            required\n          />\n          <label>Index: </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"Index\"\n            onChange={this.handleChangeIndex}\n            required\n          />\n          <label name = \"index-Id\">Id: {this.state.tokenId}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Get Id\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class GetOwnerOf extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \" \", owner: \" \"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  handleChange(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const tokenId = this.state.tokenId;\n\n\n    if (tokenId) {\n      this.setState({owner: \"...\"})\n      const owner =  await this.props.getOwnerOf(tokenId);\n      console.log(\"got owner: \",owner);\n      if(owner.error){\n        this.setState({owner: \"Invalid Id.\"});\n      }else{\n        this.setState({owner: owner});\n      }\n    }\n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4>Owner address by NFT Id: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"Index\"\n            onChange={this.handleChange}\n            required\n          />\n          <label name = \"index-Id\">owner: {this.state.owner}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Check Owner\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class TokenURI extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \" \", uri: \" \"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  handleChange(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const tokenId = this.state.tokenId;\n\n\n    if (tokenId) {\n      this.setState({uri: \"...\"})\n      const uri =  await this.props.tokenURI(tokenId);\n      console.log(\"got uri: \",uri);\n      if(uri.error){\n        this.setState({uri: \"Invalid Id.\"});\n      }else{\n        this.setState({uri: uri});\n      }\n    }\n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4>URI of NFT by Id: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"Index\"\n            onChange={this.handleChange}\n            required\n          />\n          <label name = \"index-Id\">URI: {this.state.uri}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Get URI\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class Approve extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \" \", address: \" \", msg: \"\"};\n\n    this.handleChangeId = this.handleChangeId.bind(this);\n    this.handleChangeAddress = this.handleChangeAddress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  handleChangeId(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n  handleChangeAddress(event) {\n    this.setState({address: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const tokenId = this.state.tokenId;\n    const address = this.state.address;\n\n    const tx =  await this.props.approve(address, tokenId);\n    console.log(\"aproving...\");\n    if(tx.error){\n    this.setState({msg: \"Invalid Input.\"});\n    console.log(\"failed.\");\n    }else{\n    this.setState({msg: \"Aproval successfull\"});\n    console.log(\"success!\");\n    }\n    \n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4>Approve address to transact NFT by Id: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"id\"\n            onChange={this.handleChangeId}\n            required\n          />\n          <label>Address to approve: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            step=\"1\"\n            name=\"address\"\n            onChange={this.handleChangeAddress}\n            required\n          />\n          <label name = \"index-Id\"> {this.state.msg}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Approve\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class SetApprovalForAll extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {operator: \" \", msg: \"\"};\n\n    this.handleChangeOperator = this.handleChangeOperator.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  \n  handleChangeOperator(event) {\n    this.setState({operator: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const operator = this.state.operator;\n\n    const tx =  await this.props.setApprovalForAll(operator, true);\n    console.log(\"aproving...\");\n    if(tx.error){\n    this.setState({msg: \"Failed.\"});\n    console.log(\"failed.\");\n    }else{\n    this.setState({msg: \"Aproval successfull for all NFTs\"});\n    console.log(\"success!\");\n    }\n    \n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4>Approve operator to transact all your NFTs: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          \n          <label>Address to approve: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            step=\"1\"\n            name=\"operator\"\n            onChange={this.handleChangeOperator}\n            required\n          />\n          <label name = \"index-Id\"> {this.state.msg}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Approve All\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class TransferNMWD extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \" \",  to: \" \", txHash: \" No transactions yet.\"};\n\n    this.handleChangeTo = this.handleChangeTo.bind(this);\n    this.handleChangeId = this.handleChangeId.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.toInput = React.createRef();\n    this.idInput = React.createRef();\n \n  }\n  handleChangeTo(event) {\n    this.setState({to: event.target.value});\n  }\n\n  handleChangeId(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const to = this.state.to;\n    const tokenId = this.state.tokenId;\n    console.log(\"to: \",to,\" tokenId: \",tokenId);\n\n    if (to && tokenId) {\n        const tx =  await this.props.safeTransferFrom(this.props.owner, to, tokenId);\n        console.log(tx);\n        if (tx.error){\n            this.setState({txHash: tx.error});\n        }else{\n            this.setState({txHash: tx.hash});\n            this.toInput.current.value = \"\";\n            this.idInput.current.value = \"\";\n        }\n        \n    }\n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4>Transfer Your NFT</h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        <label>Send To Address: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"to\"\n            onChange={this.handleChangeTo}\n            ref={this.toInput}\n            required\n          />\n          <label>NFT Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"id\"\n            onChange={this.handleChangeId}\n            ref={this.idInput}\n            required\n          />\n          <label >Tx Hash: {this.state.txHash}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Transfer This NFT\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class TransferFrom extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \" \", owner: \" \", to: \" \", txHash: \"No transactions yet.\"};\n\n    this.handleChangeId = this.handleChangeId.bind(this);\n    this.handleChangeTo = this.handleChangeTo.bind(this);\n    this.handleChangeOwner = this.handleChangeOwner.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.toInput = React.createRef();\n    this.idInput = React.createRef();\n    this.ownerInput = React.createRef();\n \n  }\n  handleChangeId(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n  handleChangeTo(event) {\n    this.setState({to: event.target.value});\n  }\n\n  handleChangeOwner(event) {\n    this.setState({owner: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const tokenId = this.state.tokenId;\n    const owner = this.state.owner;\n    const to = this.state.to;\n\n    const tx =  await this.props.safeTransferFrom(owner, to, tokenId);\n    console.log(tx);\n    if(tx.error){\n        this.setState({txHash: tx.error});\n        console.log(\"failed.\");\n    }else{\n        this.setState({txHash: tx.hash});\n        console.log(\"success!\", tx.hash);\n        this.toInput.current.value = \"\";\n        this.idInput.current.value = \"\";\n        this.ownerInput.current.value = \"\";\n    }\n    \n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4>Transfer Someone else's NFT (You have to be approved first)</h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        <label>Send NFT with Id:  </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            name=\"id\"\n            onChange={this.handleChangeId}\n            ref={this.idInput}\n            required\n          />\n        \n          <label>Send To Address:  </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"to\"\n            onChange={this.handleChangeTo}\n            ref={this.toInput}\n            required\n          />\n          <label>From (owner address): </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            step=\"1\"\n            name=\"owner\"\n            onChange={this.handleChangeOwner}\n            ref={this.ownerInput}\n            required\n          />\n          <label name = \"index-Id\"> {this.state.txHash}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Send Approved NFT\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class TokenMessage extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \" \", message: \" \"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  handleChange(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const tokenId = this.state.tokenId;\n\n\n    if (tokenId) {\n      this.setState({message: \"...\"})\n      console.log(this.props);\n      const message =  await this.props.tokenMessage(tokenId);\n      console.log(\"got message: \",message);\n      if(message.error){\n        this.setState({message: \"Invalid Id.\"});\n      }else{\n        this.setState({message: message});\n      }\n    }\n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4>Message by NFT Id: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"Index\"\n            onChange={this.handleChange}\n            required\n          />\n          <label name = \"index-Id\">message: {this.state.message}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Get Message\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class SetTokenMessage extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \"\",  msg: \"\", txHash: \"\"};\n\n    this.handleChangeMsg = this.handleChangeMsg.bind(this);\n    this.handleChangeId = this.handleChangeId.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.msgInput = React.createRef();\n    this.idInput = React.createRef();\n \n  }\n  handleChangeMsg(event) {\n    this.setState({msg: event.target.value});\n  }\n\n  handleChangeId(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const msg = this.state.msg;\n    const tokenId = this.state.tokenId;\n    console.log(\"msg: \",msg,\" tokenId: \",tokenId);\n\n    if (msg && tokenId) {\n        const tx =  await this.props.setTokenMessage(tokenId, msg );\n        console.log(tx);\n        if (tx.error){\n            this.setState({txHash: tx.error});\n        }else{\n            this.setState({txHash: tx.hash});\n            this.msgInput.current.value = \"\";\n            this.idInput.current.value = \"\";\n        }\n        \n    }\n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4>Set the message for your NFT</h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        <label>Message: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"msg\"\n            onChange={this.handleChangeMsg}\n            ref={this.msgInput}\n            required\n          />\n          <label>NFT Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"id\"\n            onChange={this.handleChangeId}\n            ref={this.idInput}\n            required\n          />\n          <label >Tx Hash: {this.state.txHash}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Set Message\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport function TransactionErrorMessage({ message, dismiss }) {\n  return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      Error sending transaction: {message.substring(0, 100)}\n      <button\n        type=\"button\"\n        className=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n        onClick={dismiss}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function WaitingForTransactionMessage({ txHash }) {\n  return (\n    <div className=\"alert alert-info\" role=\"alert\">\n      Waiting for transaction <strong>{txHash}</strong> to be mined\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Mint } from \"./mint\";\nimport { TokenByIndex } from \"./TokenByIndex\";\nimport { IdToOwnerIndex } from \"./IdToOwnerIndex\";\nimport { GetOwnerOf } from \"./GetOwnerOf\";\nimport { TokenURI } from \"./TokenURI\";\nimport { Approve } from \"./Approve\";\nimport { SetApprovalForAll } from \"./SetApprovalForAll\";\nimport { TransferNMWD } from \"./TransferNMWD\";\nimport { TransferFrom } from \"./TransferFrom\";\nimport { TokenMessage } from \"./TokenMessage\";\nimport { SetTokenMessage } from \"./SetTokenMessage\";\n\nimport { TransactionErrorMessage } from \"../TransactionErrorMessage\";\nimport { WaitingForTransactionMessage } from \"../WaitingForTransactionMessage\";\n\nexport class TokenContract extends React.Component{\n\n    constructor(props){\n        super(props);\n        console.log(\"token contract props: \",props);\n    }\n\n  render(){\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                <p>\n                    Welcome <b>{this.props.selectedAddress}</b>\n                </p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                {/* \n                    Sending a transaction isn't an immidiate action. You have to wait\n                    for it to be mined.\n                    If we are waiting for one, we show a message here.\n                */}\n                {this.props.txBeingSent && (\n                    <WaitingForTransactionMessage txHash={this.props.txBeingSent} />\n                )}\n\n                {/* \n                    Sending a transaction can fail in multiple ways. \n                    If that happened, we show a message here.\n                */}\n                {this.props.transactionError && (\n                    <TransactionErrorMessage\n                    message={this.props._getRpcErrorMessage(this.props.transactionError)}\n                    dismiss={() => this._dismissTransactionError()}\n                    />\n                )}\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-12\">\n                {\n                    <TransferNMWD \n                    safeTransferFrom={ (owner, to, tokenId) => {\n                        return this.props.safeTransferFrom(owner, to, tokenId);\n                    }}\n                    owner={this.props.selectedAddress}\n                    />\n                }\n                {\n                    <TransferFrom \n                    safeTransferFrom={ (owner, to, tokenId) => {\n                        return this.props.safeTransferFrom(owner, to, tokenId);\n                    }}\n                    />\n                }\n                {\n                    <GetOwnerOf \n                    getOwnerOf={ (id) => {\n                        return this.props.getOwnerOf(id);\n                    }}\n                    />\n                }\n                {\n                    <Approve \n                    approve={ (address, id) => {\n                        return this.props.approve(address, id);\n                    }}\n                    />\n                }\n                {\n                    <SetApprovalForAll \n                    setApprovalForAll={ (address, approve) => {\n                        return this.props.setApprovalForAll(address, approve);\n                    }}\n                    />\n                }\n                {\n                    <IdToOwnerIndex\n                    idToOwnerIndex={ (owner, index) => {\n                        return this.props.idToOwnerIndex(owner, index);\n                    } \n                    }/>\n                }\n                {\n\n                }\n                {\n                    <TokenByIndex\n                    tokenByIndex={  (index) => {\n                        return this.props.tokenByIndex(index);\n                    } \n                    } \n                    />\n                }\n                {\n                    <TokenMessage\n                    tokenMessage={  (id) => {\n                        return this.props.tokenMessage(id);\n                    } \n                    } \n                    />\n                }\n                {\n                    <TokenURI\n                    tokenURI={ (_tokenId ) => {\n                    return this.props.tokenURI(_tokenId);\n                } \n                }\n                owner = {this.props.owner}\n                />\n                }\n                {\n                    <SetTokenMessage\n                    setTokenMessage={ (_tokenId, _msg ) => {\n                    return this.props.setTokenMessage(_tokenId, _msg );\n                } \n                }\n                />\n                }\n                {\n                    <Mint\n                    mint={ (_to, _tokenId, _uri, royaltyRecipient, royaltyValue) => {\n                        return this.props._mint(_to, _tokenId, _uri, royaltyRecipient, royaltyValue);\n                    } }\n                    owner = {this.props.owner}\n                    />\n                }\n                </div>\n            </div>\n        </div>\n    );\n    }\n}\n","export const  NavItems = [\n    {\n        title: \"Home\",\n        link: \"/\",\n        className: \"nav-link\"\n    },\n    {\n        title: \"Overview\",\n        link: \"/overview\",\n        className: \"nav-link\"\n    },\n    {\n        title: \"Gallery\",\n        link: \"/gallery\",\n        className: \"nav-link\"\n    },\n    {\n        title: \"Wallet\",\n        link: \"wallet\",\n        className: \"nav-link\"\n    },\n    {\n        title: \"Channel\",\n        link: \"channel\",\n        className: \"nav-link\"\n    }\n    //marketplace is now off the navbar. Simply type manually the url\n\n]\n\n","import React from \"react\";\nimport {NavItems} from \"./NavItems\";\nimport '../../style/NavBar.css'\n\nimport { Link} from \"react-router-dom\";\n\nexport class NavBar extends React.Component{\n\n    state = {clicked: false};\n\n    handleClick = () => {\n        this.setState({clicked: !this.state.clicked});\n    }\n\n  render(){\n    return (\n            <nav className=\"NavItems\">\n                <div className=\"neon\">\n                    <span className=\"title-header\" data-text=\"\">\n                        No More War On Drugs</span>\n                    <span className=\"gradient\"></span>\n                    <span className=\"spotlight\"></span>\n                </div>\n                <div className=\"menu-icon\" onClick={this.handleClick}>\n                {this.state.clicked ? \" X\" : \". . .\"}\n                </div>\n                <ul className={this.state.clicked ? \"nav-menu active\" : \"nav-menu\"}>\n                    {NavItems.map( (item, index) => {\n                        return (\n                            <li key={index}>\n                               {/*<a className={item.className} href={item.link}>*/}\n                                <Link to={item.link} className={item.className}>\n                                    {item.title}\n                                    </Link>\n                                {/*{item.title}\n                                     </a> */}\n                                </li>\n                        );} )}\n                </ul>\n            </nav>\n        \n    );\n    }\n}\n","import React from \"react\";\nimport { IoWallet } from \"react-icons/io5\";\nimport '../../style/walletStatus.css'\n\nexport class WalletStatus extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        \n      }\n\n    async componentDidMount(){\n        if (window.ethereum === undefined) {\n            return ;\n        }\n        await this.props.connectWallet();\n    }\n    \n    async handleClick (){\n        await this.props.connectWallet();\n        console.log(\"clicked\");\n    }\n\n  render(){\n      // Ethereum wallets inject the window.ethereum object. If it hasn't been\n    // injected, we instruct the user to install MetaMask.\n    if (window.ethereum === undefined) {\n        return (\n        <div>\n            <div className=\"wallet not-connected\">\n                <button className=\"wallet-button not-connected\">\n                    <IoWallet style={{verticalAlign:\"middle\"}}/>&nbsp;No wallet detected\n                 </button>\n            </div>\n        </div>\n        );\n        \n      }\n    return (\n        <div>\n            <div className={this.props.connected ? \"wallet connected\" : \"wallet not-connected\"}>\n                <button className={this.props.connected ? \"wallet-button connected\" : \"wallet-button not-connected\"}\n                onClick={this.handleClick}>\n                    <IoWallet style={{verticalAlign:\"middle\"}}/>&nbsp;\n                {this.props.connected ? \"address :  \"+this.props.address.substr(0,7) + \" ... \" +\n                this.props.address.substr(this.props.address.length - 6, this.props.address.length) :\n                 \"Not Connected\"}\n                 </button>\n            </div>\n        </div>\n    );\n    }\n}\n","import React from \"react\";\n\n  export class TransferOwnership extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {to : \" \", txHash : \" \"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  handleChange(event) {\n    this.setState({to : event.target.value});\n  }\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const to  = this.state.to ;\n\n    this.setState({txHash : \"...\"})\n    const txHash  =  await this.props.transferOwnership(to);\n    console.log(\"got txHash : \",txHash );\n    if(txHash.error){\n        this.setState({txHash : \"Invalid Id.\"});\n    }else{\n        this.setState({txHash : txHash.hash });\n    }\n    \n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">Trnasfer The Ownership Of The NoMoreWarOnDrugs Contract: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>to address: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            step=\"1\"\n            name=\"to\"\n            onChange={this.handleChange}\n            required\n          />\n          <label name = \"index-Id\">txHash: {this.state.txHash }</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Transfer Ownership\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n\n","import React from \"react\";\n\nexport class MarketPlaceApprove extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \" \", address: \" \", msg: \"\"};\n\n    this.handleChangeId = this.handleChangeId.bind(this);\n    this.handleChangeAddress = this.handleChangeAddress.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  handleChangeId(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n  handleChangeAddress(event) {\n    this.setState({address: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const tokenId = this.state.tokenId;\n    const address = this.state.address;\n\n    const tx =  await this.props.marketPlaceApprove(address, tokenId);\n    console.log(\"aproving...\");\n    if(tx.error){\n    this.setState({msg: \"Invalid Input.\"});\n    console.log(\"failed.\");\n    }else{\n    this.setState({msg: \"Aproval successfull\"});\n    console.log(\"success!\");\n    }\n    \n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">Approve address to transact NFT by Id: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"id\"\n            onChange={this.handleChangeId}\n            required\n          />\n          <label>Address to approve: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            step=\"1\"\n            name=\"address\"\n            onChange={this.handleChangeAddress}\n            required\n          />\n          <label name = \"index-Id\"> {this.state.msg}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Approve\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\nimport { ethers } from \"ethers\";\n\nexport class Purchase extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \"\", txHash: \"\"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  handleChange(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n  async handleSubmit(event) {\n\n    event.preventDefault();\n    const tokenId = this.state.tokenId;\n\n    const rawPrice = await this.props.getPrice(tokenId);\n    console.log(\"rawPrice: \",rawPrice);\n\n    //const price = \"0\" + rawPrice.toString(16);\n    const price = rawPrice._hex;\n    console.log(\"price: \",price);\n\n    const abi = [\n    \"function purchaseToken(uint _tokenId) external payable\"\n    ];\n    const iface = new ethers.utils.Interface(abi);\n    const data = iface.encodeFunctionData(\"purchaseToken\", [tokenId]);\n    \n    const params = [\n        {\n        from: this.props.to,\n        to: this.props.marketPlaceAddress,\n        value: price, \n        data: data\n        },\n    ];\n    await window.ethereum\n        .request({\n        method: 'eth_sendTransaction',\n        params,\n        })\n        .then((result) => {\n        console.log(result);\n        //this.idInput.current.value = \"\";\n        // The result varies by by RPC method.\n        // For example, this method will return a transaction hash hexadecimal string on success.\n        })\n        .catch((error) => {\n        console.log(error);\n        // If the request fails, the Promise will reject with an error.\n        });\n    \n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">Purchase NFT with ID: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"id\"\n            onChange={this.handleChange}\n            required\n          />\n          <label name = \"index-Id\">txHash: {this.state.txHash}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"BUY\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class SetPrice extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \"\",  price: \"\", txHash: \"\"};\n\n    this.handleChangePrice = this.handleChangePrice.bind(this);\n    this.handleChangeId = this.handleChangeId.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.priceInput = React.createRef();\n    this.idInput = React.createRef();\n \n  }\n  handleChangePrice(event) {\n    this.setState({price: event.target.value});\n  }\n\n  handleChangeId(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    let price;\n    if(this.state.price>999){\n      price = (this.state.price).toString()+\"000000000000000000\";\n    }else{\n      price = (this.state.price*1000000000000000000).toString();\n    }\n    const tokenId = this.state.tokenId;\n    console.log(\" aaa price: \",price,\" tokenId: \",tokenId);\n\n    console.log(\"method: \",this.props.setPrice);\n    const tx =  await this.props.setPrice(price , tokenId);\n    console.log(tx);\n    if (tx.error){\n        this.setState({txHash: tx.error});\n    }else{\n        this.setState({txHash: tx.hash});\n        this.priceInput.current.value = \"\";\n        this.idInput.current.value = \"\";\n    }\n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">Set the price for your NFT</h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        <label>price (ETH): </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            name=\"price\"\n            step=\"0.00001\"\n            onChange={this.handleChangePrice}\n            ref={this.priceInput}\n            required\n          />\n          <label>NFT Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"id\"\n            onChange={this.handleChangeId}\n            ref={this.idInput}\n            required\n          />\n          <label >Tx Hash: {this.state.txHash}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Set Price\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\nimport { ethers } from \"ethers\";\n\n  export class MintThroughPurchase extends React.Component{\n\n    constructor(props){\n      super(props);\n      this.state = {tokenId: \"\", to: \"\", txHash: \"\",\n                      royaltyRecipient: 0, royaltyValue: 0};\n  \n      this.handleChangeId = this.handleChangeId.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleChangeRoyaltyRecipient = this.handleChangeRoyaltyRecipient.bind(this);\n      this.handleChangeRoyaltyValue = this.handleChangeRoyaltyValue.bind(this);\n  \n      this.idInput = React.createRef();\n      this.royaltyRecepientInput = React.createRef();\n      this.royaltyValueInput = React.createRef();\n   \n    }\n\n    handleChangeId(event) {\n      this.setState({tokenId: event.target.value});\n    }\n\n    handleChangeRoyaltyRecipient(event) {\n      this.setState({royaltyRecepient: event.target.value});\n    }\n\n    handleChangeRoyaltyValue(event) {\n      this.setState({royaltyValue: event.target.value});\n    }\n\n    async handleSubmit(event) {\n      event.preventDefault();\n      const tokenId = this.state.tokenId;\n      let royaltyRecepient = this.state.royaltyRecepient;\n      const royaltyValue = (+this.state.royaltyValue).toFixed(2) * 100;\n\n      console.log(tokenId);\n      console.log(this.props);\n\n      if(royaltyRecepient==0){\n        royaltyRecepient=\"0x0000000000000000000000000000000000000000\"\n      }\n\n      const rawPrice = await this.props.getPrice(tokenId);\n      console.log(\"rawPrice: \",rawPrice);\n\n      //const price = \"0\" + rawPrice.toString(16);\n      const price = rawPrice._hex;\n      console.log(\"price: \",price);\n\n      const abi = [\n        \"function mintThroughPurchase(address _to, uint _tokenId, address royaltyRecipient, uint256 royaltyValue) external payable\"\n      ];\n      const iface = new ethers.utils.Interface(abi);\n      const data = iface.encodeFunctionData(\"mintThroughPurchase\", [this.props.to, tokenId, royaltyRecepient, royaltyValue]);\n        \n        const params = [\n          {\n            from: this.props.to,\n            to: this.props.marketPlaceAddress,\n            value: price, \n            data: data\n          },\n        ];\n        await window.ethereum\n          .request({\n            method: 'eth_sendTransaction',\n            params,\n          })\n          .then((result) => {\n            console.log(result);\n            this.idInput.current.value = \"\";\n            this.royaltyRecepientInput.value = \"\";\n            this.royaltyValueInput.value = \"\";\n            // The result varies by by RPC method.\n            // For example, this method will return a transaction hash hexadecimal string on success.\n          })\n          .catch((error) => {\n            console.log(error);\n            // If the request fails, the Promise will reject with an error.\n          });\n        \n      \n    }\n\n    render(){\n      \n      return (\n        <div>\n          <h4 className=\"component-title\">Mint through purchase</h4>\n          <h5 className=\"component-subtitle\">Owner: {this.props.owner}</h5>\n          <form\n            onSubmit={this.handleSubmit} >\n            <div className=\"form-group\">\n              <label>Token Id: </label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"Id\"\n                onChange={this.handleChangeId}\n                ref={this.idInput}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Royalty address</label>\n              <input className=\"form-control\" type=\"text\" name=\"alias\" ref={this.royaltyRecepientInput} onChange={this.handleChangeRoyaltyRecipient} required />\n              <label>Royalty Value (Percentage. MAX 2 decimals)</label>\n              <input className=\"form-control\" type=\"number\" step=\"0.01\" name=\"royaltyValue\" ref={this.royaltyValueInput}  onChange={this.handleChangeRoyaltyValue} required /> \n              <label name = \"response\"> {this.state.txHash}</label>\n            </div>\n            <div className=\"form-group\">\n              <input className=\"btn btn-primary\" type=\"submit\" value=\"Mint\" />\n            </div>\n          </form>\n        </div>\n      );\n     }\n}\n","import React from \"react\";\n\nexport class UpdateNMWDContract extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {address: \" \"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  handleChange(event) {\n    this.setState({address : event.target.value});\n  }\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const address  = this.state.address ;\n    const uri =  await this.props.updateNMWDContract(address);\n    console.log(\"contract address setup with \",address);\n    if (uri.error){\n        console.log(uri.error);\n    }\n    }\n  \n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">Setup the market place with the address of NoMoreWarOnDrugs' contract: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>Contract Address: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            step=\"1\"\n            name=\"address\"\n            onChange={this.handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Setup NFT Contract\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport function MarketPlaceHead() {\n  return (\n    <div>\n      <h1> Market Place </h1>\n    </div>\n    \n  );\n}","import React from \"react\";\n\nexport class GetPrice extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \"\", price: \"\"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n \n  }\n  handleChange(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const tokenId = this.state.tokenId;\n\n    this.setState({price: \"...\"})\n    const price =  await this.props.getPrice(tokenId);\n    console.log(\"got price: \",parseInt(price._hex));\n    if(price.error){\n      this.setState({price: \"Invalid Id.\"});\n    }else{\n      this.setState({price: parseInt(price._hex)});\n    }\n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">Get The Price Of The NFT With Id: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"id\"\n            onChange={this.handleChange}\n            required\n          />\n          <label name = \"price\">Price: {(this.state.price)/1000000000000000000} ETH</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Get Price\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport function GetBackOwnership({getBackOwnership}) {\n  return (\n    <div className=\"container\">\n      <div className=\"justify-content-md-center\">\n        <div className=\"text-center\">\n        </div>\n        <div className=\"text-center\">\n          <p> WARNING: ONLY USE THIS BUTTON IN CASE OF EMERGENCY</p>\n          <button\n            className=\"btn-warning\"\n            type=\"button\"\n            onClick={getBackOwnership}\n          >\n            Get Back Ownership\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport class GetUserBalance extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {balance: \" \", address: props.address};\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  async handleSubmit(event) {\n    event.preventDefault();\n\n    console.log(this.props);\n    const balance =  await this.props.getUserBalance(this.state.address);\n    console.log(\"got balance: \",parseInt(balance._hex));\n    if(balance.error){\n    this.setState({balance: \"Oops! Somethig went wrong. Try again later.\"});\n    }else{\n    this.setState({balance: parseInt(balance._hex)/1000000000000000000});\n    }\n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">Consult your balance held in the MarketPlace: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        <label name = \"balance\">Balance: {this.state.balance}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Get My Balance\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class GetContractBalance extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {balance: \" \", address: props.address};\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  async handleSubmit(event) {\n    event.preventDefault();\n\n    //this.setState({balance: \"...\"});\n    console.log(this.props);\n    const balance =  await this.props.getContractBalance();\n    console.log(\"got balance: \",parseInt(balance._hex));\n    if(balance.error){\n    this.setState({balance: \"Oops! Somethig went wrong. Try again later.\"});\n    }else{\n    this.setState({balance: parseInt(balance._hex)/1000000000000000000});\n    }\n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">Consult the MarketPlace's Balance: </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        <label name = \"balance\">Balance: {this.state.balance}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Get Contract's Balance\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class WithdrawUserFunds extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {amount: \"\", txHash: \"\"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getMax = this.getMax.bind(this);\n \n  }\n  handleChange(event) {\n    this.setState({amount: event.target.value});\n  }\n\n  async getMax(event){\n    console.log(\"getMax activated\");\n    let max = await this.props.getUserBalance(this.props.address);\n    max-=9;\n    this.setState({amount: parseInt(max)});\n}\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const amount = this.state.amount;\n\n\n    \n    this.setState({txHash: \"...\"});\n    console.log(this.props);\n    const txHash =  await this.props.withdrawUserFunds(amount.toString());\n    console.log(\"got txHash: \",txHash);\n    if(txHash.error){\n    this.setState({txHash: \"Oops! Somethig went wrong. Try again later.\"});\n    }else{\n    this.setState({txHash: txHash.hash});\n    }\n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">Withdraw funds (User): </h4>\n      <button onClick ={this.getMax} className=\"btn btn-helper\">\n        Withdraw Max Value</button>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>Amount</label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"amount\"\n            onChange={this.handleChange}\n            value={this.state.amount}\n            required\n          />\n          <label name = \"txHash\">txHash: {this.state.txHash}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Withdraw From Marketplace\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class WithdrawFromContract extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {amount: \"\", txHash: \"\", to: \"\"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeTo = this.handleChangeTo.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getMax = this.getMax.bind(this);\n    this.getMyAddress = this.getMyAddress.bind(this);\n \n  }\n  handleChange(event) {\n    this.setState({amount: event.target.value});\n  }\n\n  handleChangeTo(event) {\n    this.setState({to: event.target.value});\n  }\n\n  getMyAddress(){\n    this.setState({to: this.props.myAddress});\n  }\n\n  async getMax(event){\n      let max = await this.props.getContractBalance();\n      max-=9;\n      console.log(\"max: \",max);\n      this.setState({amount: parseInt(max)});\n  }\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const amount = this.state.amount;\n\n\n    \n    this.setState({txHash: \"...\"});\n    console.log(this.props);\n    const txHash =  await this.props.withdrawFromContract(this.state.to, amount.toString());\n    console.log(\"got txHash: \",txHash);\n    if(txHash.error){\n    this.setState({txHash: \"Oops! Somethig went wrong. Try again later.\"});\n    }else{\n    this.setState({txHash: txHash.hash, amount: \"\", to: \"\"});\n    }\n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">\n        Withdraw funds from the MarketPlace (Only marketplace owner) </h4>\n      \n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        \n          <label>Amount: </label>\n          <input\n            className=\"form-control\"\n            type=\"number\"\n            step=\"1\"\n            name=\"amount\"\n            onChange={this.handleChange}\n            required\n            value={this.state.amount}\n          />\n          <button onClick ={this.getMax} type=\"button\" className=\"btn btn-helper\">\n            All available funds</button>\n          <br></br>\n          <label>To: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            step=\"1\"\n            name=\"amount\"\n            onChange={this.handleChangeTo}\n            required\n            value={this.state.to}\n          />\n          <button onClick ={this.getMyAddress} type=\"button\" className=\"btn btn-helper\">\n            My address</button>\n          <br></br>\n          <label name = \"txHash\">txHash: {this.state.txHash}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Withdraw\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class SetForSale extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \"\",  forSale: \"\", txHash: \"\"};\n\n    this.handleChangeForSale = this.handleChangeForSale.bind(this);\n    this.handleChangeId = this.handleChangeId.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.idInput = React.createRef();\n \n  }\n  handleChangeForSale(event) {\n    this.setState({forSale: !!event.target.value});\n  }\n\n  handleChangeId(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const forSale = this.state.forSale;\n    const tokenId = this.state.tokenId;\n    console.log(\"forSale: \",forSale,\" tokenId: \",tokenId);\n\n    \n    const tx =  await this.props.setForSale(tokenId, forSale);\n    console.log(tx);\n    if (tx.error){\n        this.setState({txHash: tx.error});\n    }else{\n        this.setState({txHash: tx.hash});\n        this.idInput.current.value = \"\";\n    }\n        \n    \n  \n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">Turn On/Off the sale of your NFT (it is off by default!)</h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        <label>for sale? \n          <select value={this.state.forSale} onChange={this.handleChangeForSale}\n          className=\"select-menu\">\n            <option value=\"true\">Yes! Sell it.</option>\n            <option value=\"\">No! I want to keep this one.</option>\n          </select>\n        </label>\n        <label>NFT Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"id\"\n            onChange={this.handleChangeId}\n            ref={this.idInput}\n            required\n          />\n          <label >Tx Hash: {this.state.txHash}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Set\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\nexport class GetForSale extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {tokenId: \"\",  forSale: \"\"};\n\n    this.handleChangeId = this.handleChangeId.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.idInput = React.createRef();\n \n  }\n\n  handleChangeId(event) {\n    this.setState({tokenId: event.target.value});\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const tokenId = this.state.tokenId;\n    console.log(\" tokenId: \",tokenId);\n\n    \n    const _forSale =  await this.props.getForSale(tokenId);\n    console.log(_forSale);\n    if (_forSale.error){\n        this.setState({forSale: _forSale.error});\n    }else{\n        this.setState({forSale:  _forSale.toString()});\n        this.idInput.current.value = \"\";\n    }\n  }\n\n  render(){\n  return (\n    <div>\n      <h4 className=\"component-title\">is this NFT for sale? </h4>\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n        <label>NFT Id: </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"id\"\n            onChange={this.handleChangeId}\n            ref={this.idInput}\n            required\n          />\n          <label >For Sale: {this.state.forSale}</label>\n        </div>\n        <div className=\"form-group\">\n          <input className=\"btn btn-primary\" type=\"submit\" value=\"Get\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n}\n","import React from \"react\";\n\n\nexport function InitializeContracts({updateNMWDContract, transferOwnership, \n    NFTAddress, MarketplaceAddress}) {\n\nasync function initialize(){\n    await updateNMWDContract(NFTAddress);\n    await transferOwnership(MarketplaceAddress);\n}\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col-12 text-center\">\n        </div>\n        <div className=\"col-6 p-4 text-center\">\n          <p> WARNING: ONLY USE THIS ONCE!</p>\n          <button\n            className=\"btn btn-warning\"\n            type=\"button\"\n            onClick={initialize}\n          >\n            Initialize Contratcs\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { TransferOwnership } from  \"./TransferOwnership\";\nimport { MarketPlaceApprove } from \"./MarketPlaceApprove\";\nimport { Purchase } from \"./Purchase\";\nimport { SetPrice } from \"./SetPrice\";\nimport { MintThroughPurchase } from \"./MintThroughPurchase\";\nimport { UpdateNMWDContract } from \"./UpdateNMWDContract\";\nimport { MarketPlaceHead } from \"./MarketPlaceHead\";\nimport { GetPrice } from \"./GetPrice\";\nimport { GetBackOwnership } from \"./GetBackOwnership\";\nimport { GetUserBalance } from \"./GetUserBalance\";\nimport { GetContractBalance } from \"./GetContractBalance\";\nimport { WithdrawUserFunds } from \"./WithdrawUserFunds\";\nimport { WithdrawFromContract } from \"./WithdrawFromContract\";\nimport { SetForSale } from \"./SetForSale\";\nimport { GetForSale } from \"./GetForSale\";\nimport { InitializeContracts } from \"./InitializeContracts\";\n\nexport class Marketplace extends React.Component{\n\n\n  render(){\n    return (\n        <div>\n            {\n              <MarketPlaceHead/>\n            }\n            {\n              <InitializeContracts\n                updateNMWDContract={ (address) => {\n                  return this.props.updateNMWDContract(address);\n                  } \n                }\n                transferOwnership = { (to) => {\n                  return this.props.transferOwnership(to);\n                  }\n                }\n                NFTAddress={this.props.NFTAddress}\n                MarketplaceAddress={this.props.MarketplaceAddress}\n              />\n            }\n            {\n              <UpdateNMWDContract\n                updateNMWDContract={ (address) => {\n                  return this.props.updateNMWDContract(address);\n                } }\n              />\n            }\n            {\n              <TransferOwnership\n                transferOwnership = { (to) => {\n                  return this.props.transferOwnership(to);\n                }}\n              />\n            }\n            {\n              <SetPrice\n                setPrice = { (price, tokenId) => {\n                  return this.props.setPrice(price, tokenId);\n                }}\n              />\n            }\n            {\n              <GetPrice\n                getPrice = { (tokenId) => {\n                  return this.props.getPrice( tokenId);\n                }}\n              />\n              }\n            {\n              <MarketPlaceApprove\n                marketPlaceApprove={ (_tokenId) => {\n                  return this.props.approveNMWD(_tokenId);\n                } }\n              />\n            }\n            {\n              <Purchase\n                getPrice = { (tokenId) => {\n                  return this.props.getPrice( tokenId);\n                }}\n                to = {this.props.to}\n                of = {this.props.of}\n                marketPlaceAddress = {this.props.MarketplaceAddress}\n              />\n            }\n            {\n              <MintThroughPurchase\n                to = {this.props.to}\n                marketPlaceAddress = {this.props.MarketplaceAddress}\n                getPrice = { (tokenId) => {\n                  return this.props.getPrice( tokenId);\n                }}\n              />\n            }\n            {\n              <GetUserBalance\n                getUserBalance = { (_address) => {\n                  return this.props.getUserBalance(_address);\n                }\n              }\n              address = {this.props.selectedAddress}\n              />\n            }\n            {\n              <WithdrawUserFunds\n                withdrawUserFunds = { (amount) => {\n                  return this.props.withdrawUserFunds( amount);\n                }}\n                getUserBalance = { (_address) => {\n                  return this.props.getUserBalance(_address);\n                }\n              }\n              address = {this.props.selectedAddress}\n              />\n              }\n              {\n              <SetForSale\n                setForSale = { (tokenId, forSale) => {\n                  return this.props.setForSale(tokenId, forSale);\n                }}\n              />\n            }\n            {\n              <GetForSale\n                getForSale = { (tokenId) => {\n                  return this.props.getForSale( tokenId);\n                }}\n              />\n              }\n              {\n              <GetContractBalance\n                getContractBalance = { () => {\n                  return this.props.getContractBalance();\n                }\n              }\n              address = {this.props.MarketPlaceAddress}\n              />\n            }\n              {\n              <WithdrawFromContract\n                withdrawFromContract = { (to, amount) => {\n                  return this.props.withdrawFromContract(to, amount);\n                }}\n                getContractBalance = { () => {\n                  return this.props.getContractBalance();\n                }\n              }\n              myAddress={this.props.selectedAddress}\n              />\n              }\n            {\n              <GetBackOwnership\n                getBackOwnership ={ () => {\n                  return this.props.getBackOwnership();\n                }}\n              />\n            }\n            \n        </div>\n    );\n    }\n}\n","import React from \"react\";\nimport \"../../style/left-image.css\"\n\n\nexport class LeftImage extends React.Component {\n    render(){\n        return (\n            <div \n                style={this.props.backgroundImage? {\n                    backgroundImage:\"url('\"+this.props.backgroundImage+\"')\",\n                    backgroundSize: \"cover\",\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundAttachment: \"fixed\"\n                    }:{}}\n                    >\n            <div\n                className=\"left-container\" \n                style={this.props.backgroundImage?{backgroundColor:\"#000000cc\"}:{}}\n            >\n                <div className=\"left-image-container\">\n                    <img \n                        src={this.props.src}\n                        alt={this.props.alt}\n                        className=\"left-image\"\n                        />\n                </div>\n                <div className=\"left-text\">\n                    <h2>{this.props.title}</h2>\n                    {this.props.text}\n                </div>\n                </div>\n            </div>\n            \n        );\n    }\n}","import React from \"react\";\nimport \"../../style/right-image.css\"\n\n\nexport class RightImage extends React.Component {\n    render(){\n        console.log(\"this.props.backgroundImage\",this.props.backgroundImage);\n        return (\n            <div \n            style={this.props.backgroundImage? {\n                backgroundImage:\"url('\"+this.props.backgroundImage+\"')\",\n                backgroundSize: \"cover\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundAttachment: \"fixed\"\n            }:{}}\n            >\n                <div\n                className=\"right-container\" \n                style={this.props.backgroundImage?{backgroundColor:\"#000000cc\"}:{}}\n                >\n                \n                <div className=\"right-text\">\n                <h2>{this.props.title}</h2>\n                    {this.props.text}\n                </div>\n                <div className=\"right-image-container\">\n                    <img \n                    src={this.props.src}\n                    alt={this.props.alt}\n                    className=\"right-image\"\n                    />\n                </div>\n                </div>\n            </div>\n            \n        );\n    }\n}","import React from \"react\";\n\n\nexport class Buttons extends React.Component {\n    constructor(props){\n        super(props);\n        this.gallery = this.gallery.bind(this);\n    }\n\n    gallery(event){\n        const currentUrl = window.location.href;\n        window.location.href = currentUrl+\"gallery\";\n    \n    }\n    render(){\n        return (\n            <div className=\"home-buttons\">\n                <div>\n                    <h2 className=\"explore-nft\"> Explore our gallery of NFTs</h2>\n                </div>\n                <div className=\"test\">\n                    <button className=\"explore-nft-button\"\n                    onClick={this.gallery}>Gallery</button>\n                </div>\n                \n            </div>\n            \n        );\n    }\n}","import React from \"react\";\nimport './Home.css'\n\nimport { LeftImage } from \"./LeftImage\";\nimport { RightImage } from \"./RightImage\";\nimport { Buttons } from \"./Buttons\";\n\nexport class Home extends React.Component {\n    render(){\n        return (\n            <div className=\"home-container\">\n            <LeftImage\n                //src=\"http://4.bp.blogspot.com/-Yq3Q5ex8chU/T0uKnKUhjcI/AAAAAAAAAEM/cDfeYY9cYQA/s1600/ebla_clay_tablet.png\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9d/Stele_of_Vultures_detail_01-transparent.png/440px-Stele_of_Vultures_detail_01-transparent.png\"\n                alt=\"image2\"\n                title=\"Be part of history\"\n                text={<p>\n                    By getting one or more of the Stop-The-War-On-Drugs NFTs, you are not only supporting a YouTube channel and the artists who create \n                        these art works, but you are also immortalizing yourself in the Ethereum blockchain for ever! These NFTs offer the opportunity\n                        of writting a message against the nefarious <b>War On Drugs</b> directly onto the blockchain without the possibility of being modified or deleted <b>ever!!! </b>\n                        We, together, will pioneer in the blockchain political activism to end this horrendous <b>War On Drugs</b> that takes away our freedoms and rights, \n                        and you will be able to prove to your kids and grandkids that you were among those pioneers of this noble cause. What are you waiting for?\n                    </p>\n                }            \n            />\n            <Buttons/>\n            <RightImage\n                src=\"https://news.artnet.com/app/news-upload/2015/07/boteroEscobar-768x1024.jpg\"\n                alt=\"image2\"\n                title=\"You are supporting artists and my Youtube channel\"\n                text={<p >\n                    One of the main goals of this project is to give visibility to some not-mainstream  artists from the very same places that \n                    <b> War On Drugs</b> has done the most harm. In other words, artists from cities like Cali, Colombia or Culiacán, México.\n                    People who suffer -through their skin- the cartels brutality and government corruption in their daily lives. \n                    <br/>\n                    <br/>\n                \n                    But that's not it.\n                    This NFT project is one of the first ones to implement EIP2907. This EIP aims to support royalties for\n                    NFT creators. NWD has a standard 8.00% royalty on all NFTs, and, as a rule of thumb, NWD grants a percentage of \n                    the total amount of royalties collected to all the artists who collaborate in the art creation. This percentage \n                    can be somewhere between 15% and 50% depending on the preference of payment of the artist. To know more about\n                    this, you can check out our artist partner program. \n                </p>\n                }       \n\n            />\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport \"../../style/three-elements.css\"\n\n\nexport class ThreeElements extends React.Component {\n    render(){\n        return (\n            <div \n                style={this.props.backgroundImage? {\n                backgroundImage:\"url('\"+this.props.backgroundImage+\"')\",\n                backgroundSize: \"cover\",\n                backgroundRepeat: \"no-repeat\"\n                }:{}}\n                 >\n                <div\n                    className=\"three-elements-container\" \n                    style={this.props.backgroundImage?{backgroundColor:\"#000000bb\"}:{}}\n                    >\n                    <div className=\"element\">\n                        <h4>{this.props.leftTitle}</h4>\n                        {this.props.leftText}\n                    </div>\n                    <div className=\"element\">\n                        <h4>{this.props.middleTitle}</h4>\n                        {this.props.middleText}\n                    </div>\n                    <div className=\"element\">\n                        <h4>{this.props.rightTitle}</h4>\n                        {this.props.rightText}\n                    </div>\n                </div>\n            </div>\n            \n        );\n    }\n}","import React from \"react\";\nimport './Home.css'\n\nimport { LeftImage } from \"./LeftImage\";\nimport { RightImage } from \"./RightImage\";\nimport { ThreeElements } from \"./ThreeElements\";\n\nexport class Overview extends React.Component {\n    render(){\n        return (\n            <div className=\"home-container\">\n            <LeftImage\n                src=\"https://www.pngplay.com/wp-content/uploads/2/Diamond-Transparent-Image.png\"\n                alt=\"image2\"\n                title=\"There is a finit amount of NFTs: 512\"\n                \n                text={<p>\n                    SWD NFTs are scarce. There will be only 512 SWDs ever which is hardcoded in the smart contract.\n                    This finit amount of NFTs aims to make each token very special, and therefore gives it a high \n                    value that increases over time. But these NFTs are not just any NFTs out there in the market.\n                    These NFTs are tokens of your political believes, and peaces of history that we are creating\n                    together.\n\n                    <br/><br/>\n                    This is a very important moment in history, and you can not just be part of it, but you can even own \n                    peaces of it. Don't miss out!\n                    <br/><br/>\n                    Where does the \"512\" number come from? 512 is the result of 2^9.\n                    </p>\n                }            \n            />\n            <RightImage\n                src=\"https://gallery.yopriceville.com/var/resizes/Free-Clipart-Pictures/School-Clipart/Quill_and_Ink_Pot_Transparent_PNG_Vector_Clipart.png?m=1507172108\"\n                alt=\"image2\"\n                title=\"The Message\"\n                backgroundImage=\"https://www.forbes.com/advisor/wp-content/uploads/2021/04/NFT.jpeg.jpg\"\n                text={<p >\n                    A very important aspect of this collection of NFTs is that you can set a message that\n                    will live for ever in the blockchain. This message can be set only once, and you cannot\n                    modify it once it's set, so be careful! The amount of characters available for this message is 300,\n                    so there is enough space for you to elaborate on your idea. \n                    <br/><br/>\n                    You can \"sign\" the message with your name or a pseudoname  at the end to make sure that people will\n                    know that it was you who set the message.\n                    <br/><br/>\n                    The main idea of this message is to let the governments of the world know that we are \n                    against the hypocrite <b>War On Drugs</b>, and that we are tired of state terrorism, and\n                    we also want our freedoms back. However, there is no hard rules. You can literally write whatever\n                    you want.  \n                \n                </p>\n                }       \n\n            />\n            <ThreeElements\n                leftTitle=\"YouTube Channel\"\n                leftText={<p>\n                    This NFTs project is part of a bigger project which main goal is to demilitarize \n                    the <b>War On Drugs</b>. The main part of this project has been so far the \n                    YouTube channel that aims to study the development\n                    of prohibition and drug trafficking from various perspective, and shedding \n                    light on the fact that the <b>War On Drugs</b> is nothing more than a geopolitical,\n                    and political tool. In other words, a means for power.\n            \n                </p>}\n\n                middleTitle=\"Gallery\"\n                middleText={<p>\n                    Explore the different NFTs created in collaboration with different artists from\n                    the very same places that have been harmed the most in this <b>War On Drugs</b>.\n                    Express yourself against this bloodshed by writing a message that will live for\n                    ever in the Ethereum blockchain.\n                </p>\n\n                }\n\n                rightTitle=\"Blog\"\n                rightText={<p>\n                    If you are a curious person, the blog is for you. We have put together an extension\n                    of the YouTube Channel where we express our main ideas, and link it with different\n                    videos that talk about those ideas. If you persue the truth, you have\n                    come to the right place. If you like to live in a bubble, don't go there.\n                </p>\n\n                }\n            />\n            <LeftImage\n                src=\"https://i.pinimg.com/originals/30/64/8c/30648c7d2798558216aec8580c2746ee.png\"\n                alt=\"image2\"\n                title=\"The Artists\"\n                \n                text={<p>\n                    This collection of NFTs have collaborated with different artists, mostly from\n                    Latinamerica. They are mostly local artists from cities that have been really\n                    devastated by this War On Drugs. Cities like Cali, Cololombia, or Ciudad Juarez, \n                    México, are among the hometowns of these talented artists. One of the goals of \n                    this project is to give visibility to these not-very-known artists through the Ethereum \n                    blockchain, and expose the incredible creativity that these forgotten areas can offer. \n                    Also, a percentage of the royalties of the NFTs goes to the artists directly, which \n                    could potentially impact their lives in a very positive way.\n                    </p>\n                }            \n            />\n            <RightImage\n                src=\"https://forensicminds.co.uk/images/marker5.png\"\n                alt=\"image2\"\n                backgroundImage=\"https://www.eluniversal.com.mx/sites/default/files/2019/08/23/ejercito_.jpg\"\n                title=\"Why To Stop War On Drugs?\"\n                text={<p >\n                    The question should be better why not? Simply try to think about one achievement of the\n                    War On Drugs. Now, try to research and see if that achievement is actually true. Besides the\n                    biased sources you might find, the truth is that the stricter the prohibition on drugs, the worse the drug problem\n                    gets, and it has failed on all of it purposes. We still have a steady supply of drugs in the streets.\n                    We have an increasing drug addiction problem. We have an increasing number of deaths by ODs.\n                    What is even worse, today, the-War-On-Drugs victory looks further away than ever before! Maybe, we are fighting it wrong.\n                    But the question still remains, why hasn't anybody noticed? Or maybe people in power are looking to the other side?\n                    What are those intesests behind the sham called War On Drugs?\n                \n                </p>\n                }   \n            />\n            <LeftImage\n                src=\"https://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c545.png\"\n                alt=\"image2\"\n                title=\"Support My YouTube Channel\"\n                \n                text={<p>\n                    This collection of NFTs is born from the necessity of supporting my research on \n                    the War On Drugs which I share through my YouTube Channel. Even though my channel\n                    has captured some attention before, YouTube quickly started to restric my videos,\n                    and even my ability to monetize some of them. These restrictions are so severe that\n                    they killed the organic growth of my views, and therefore my profits from my channel. \n                    Instead of abandoning my initiative, I decided to combine all of my passions in this  \n                    project: history, software development, blockchain technology, and politics. My idea is to\n                    feed my YouTube channel from the NFT market, at the same time that I feed the NFT \n                    market from my YouTube Channel. In the process, I can finance my true passions, and \n                    beneffit the comunities I work with.\n            \n                    </p>\n                }            \n            />\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { CgFilters } from \"react-icons/cg\";\nimport { IoCaretDown } from \"react-icons/io5\";\nimport { IoCaretUp } from \"react-icons/io5\";\nimport '../../style/filter.css';\nconst fs = require(\"fs\");\nconst DB = require(\"../../localDB/attributes.json\");\nconst CONST = require('./uri_constants');\n\nconst TOPIC = CONST.TOPIC;\nconst LANGUAGE = CONST.LANGUAGE;\n\nexport class Filter extends React.Component{\n\n    constructor(props){\n      super(props);\n\n        const generalTopics=[];\n        const peopleTopics=[];\n        const countryTopics=[];\n        const drugKind=[];\n        const artists=[];\n        const topics = DB.topic;\n\n        Object.entries(DB.artist).map(([key,value], index) => {\n            artists.push(key);\n        });\n        console.log(\"topics\",topics);\n        let reversedTOPIC = {};\n        Object.entries(TOPIC).map(([value,key], index) => {\n            reversedTOPIC[key]= value;\n        });\n        console.log(\"reversedTOPIC\", reversedTOPIC);\n        const nTopics = Object.entries(topics).map((str_topic) => {\n            return parseInt(str_topic);\n        });\n        console.log(\"nTopics\",nTopics);\n        nTopics.map( (ntopic) => {\n            if(ntopic<20){\n                drugKind.push(reversedTOPIC[ntopic]);\n            }else if(ntopic>=20 && ntopic <40){\n                generalTopics.push(reversedTOPIC[ntopic]);\n            }else if(ntopic>=40 && ntopic <60){\n                peopleTopics.push(reversedTOPIC[ntopic]);\n            }else if(ntopic>=60 && ntopic <100){\n                countryTopics.push(reversedTOPIC[ntopic]);\n            }else{\n                throw(\"corrupted database\");\n            }\n        });\n        console.log(\"drugKind\",drugKind);\n        console.log(\"generalTopics\",generalTopics);\n        console.log(\"peopleTopics\",peopleTopics);\n        console.log(\"countryTopics\",countryTopics);\n\n      this.state = { language:-1,\n                    artists:artists, selectedArtists:[],\n                    selectedTopics:[],\n                    generalTopics:generalTopics,\n                    peopleTopics:peopleTopics,\n                    countryTopics:countryTopics,\n                    drugTopic:drugKind,\n                    topicVisible: false\n                };\n  \n      this.handleLanguage = this.handleLanguage.bind(this);\n      this.handleArtist = this.handleArtist.bind(this);\n      this.handleTopics = this.handleTopics.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.show = this.show.bind(this);\n        \n      this.languageInput = React.createRef();\n      this.artistInput = React.createRef();\n      this.topicsInput = React.createRef();\n\n      console.log(this.state);\n    }\n\n    async handleLanguage(event) {\n        console.log(\"about to set language : \", event.target.value);\n        await this.setState({language: event.target.value});\n        console.log(\"language : \", this.state.language);\n        \n      }\n\n    async handleArtist(event) {\n        let checked = this.state.selectedArtists;\n      if(event.target.checked){\n          checked.push(event.target.value);\n      }else{\n          checked = checked.filter( value => value != event.target.value );\n      }\n      await this.setState({selectedArtists:checked});\n      console.log(\"this.state.selectedArtists\",this.state.selectedArtists);\n      console.log(\"ids of first artist\",DB.artist[this.state.selectedArtists[0]]);\n\n        }\n\n    async handleTopics(event) {\n        let checked = this.state.selectedTopics;\n      if(event.target.checked){\n          checked.push(event.target.value);\n      }else{\n          checked = checked.filter( value => value != event.target.value );\n      }\n      await this.setState({selectedTopics:checked});\n      console.log(\"this.state.selectedTopics\",this.state.selectedTopics);\n      console.log(\"FIRST TOPIC value\",TOPIC[this.state.selectedTopics[0]]);\n      console.log(\"ids of first topic\",DB.topic[TOPIC[this.state.selectedTopics[0]]]);\n    }\n\n\n    show(event){\n        event.preventDefault();\n        this.setState({topicVisible: !this.state.topicVisible});\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        const byTopics = this.state.selectedTopics.map( (literal) => TOPIC[literal] );\n        console.log(\"byTopics\",byTopics);\n        console.log(\"this.state.selectedArtists\",this.state.selectedArtists);\n        console.log(\"this.state.language\",this.state.language);\n        this.props.applyFilter(byTopics,this.state.selectedArtists, this.state.language);\n    }\nrender(){\n\n    return (\n        <div className=\"filter-container\">\n        <form\n            onSubmit={this.handleSubmit} >\n            <button onClick={this.show} className=\"topic-button\">\n                <CgFilters style={{verticalAlign:\"middle\",fontSize:\"1.2rem\"}}/>&nbsp;Filter &nbsp;\n                {this.state.topicVisible? <IoCaretUp style={{verticalAlign:\"middle\"}}/>:\n                                            <IoCaretDown style={{verticalAlign:\"middle\"}}/>}\n                </button>\n            <div className={this.state.topicVisible? \"\": \"dont-show\"}>\n                <div className=\"filter-menu\">\n                  <div className=\"filter-category\">\n                      <label className=\"topic-title\">By drug kind:</label>\n                      \n                              <div className=\"topic-options\">\n                                      {this.state.drugTopic.map((drug, index) => {\n                                          return  <div key={index}>\n                                                  <input \n                                                  type=\"checkbox\" \n                                                  name=\"topic\" \n                                                  value={drug}\n                                                  onChange={this.handleTopics}\n                                                  /> \n                                                  {drug}\n                                                  </div>\n                                      })\n                                      }\n                              </div>\n                      \n                  </div> \n\n                  <div className=\"filter-category\">\n                  <label className=\"topic-title\">By historical character:</label>\n                    <div className={this.state.topicVisible? \"\": \"dont-show\"}>\n                      <div className=\"topic-options\">\n                              {this.state.peopleTopics.map((person,index) => {\n                                  return  <div key={index}>\n                                          <input \n                                          type=\"checkbox\" \n                                          name=\"topic\" \n                                          value={person}\n                                          onChange={this.handleTopics}\n                                          /> \n                                          {person}\n                                          </div>\n                              })\n                              }\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"filter-category\">\n                    <label className=\"topic-title\">By country reference:</label>\n                      <div className={this.state.topicVisible? \"\": \"dont-show\"}>\n                              <div className=\"topic-options\">\n                                      {this.state.countryTopics.map((country, index) => {\n                                          return  <div key={index}>\n                                                  <input \n                                                  type=\"checkbox\" \n                                                  name=\"topic\" \n                                                  value={country}\n                                                  onChange={this.handleTopics}\n                                                  /> \n                                                  {country}\n                                                  </div>\n                                      })\n                                      }\n                              </div>\n                      </div>\n                  </div> \n\n                  <div className=\"filter-category\">\n                  <label className=\"topic-title\">By general topic:</label>\n                      <div className={this.state.topicVisible? \"\": \"dont-show\"}>\n                              <div className=\"topic-options\">\n                                      {this.state.generalTopics.map((topic, index) => {\n                                          return  <div key={index}>\n                                                  <input \n                                                  type=\"checkbox\" \n                                                  name=\"topic\" \n                                                  value={topic}\n                                                  onChange={this.handleTopics}\n                                                  /> \n                                                  {topic}\n                                                  </div>\n                                      })\n                                      }\n                              </div>\n                      </div>\n                  </div> \n\n                  <div className=\"filter-category\">\n                    <label className=\"topic-title\">By artist:</label>\n                      <div className={this.state.topicVisible? \"\": \"dont-show\"}>\n                              <div className=\"topic-options\">\n                                      {this.state.artists.map((artist, index) => {\n                                          return  <div key={index}>\n                                                  <input \n                                                  type=\"checkbox\" \n                                                  name=\"topic\" \n                                                  value={artist}\n                                                  onChange={this.handleArtist}\n                                                  /> \n                                                  {artist}\n                                                  </div>\n                                      })\n                                      }\n                              </div>\n                      </div>\n                  </div> \n\n                  <div className=\"filter-category\">\n                  <label>Language The NFT Is In: </label>\n                  <select \n                    value={this.state.languageInput} \n                    onChange={this.handleLanguage}\n                    className=\"\"\n                    required\n                    >   \n                        <option value={-1}>All</option>\n                        {LANGUAGE.map((language, index)=>{\n                            return <option value={index}>{language}</option>\n                        })}\n                    </select>\n                  </div>\n              </div>\n              <button type=\"submit\">apply filter</button>\n             </div>\n             \n        </form>\n        </div>\n    );\n    }\n}\n","import React from \"react\";\nimport \"../../style/view-on-etherscan.css\";\n\nexport class ViewOnEtherscan extends React.Component{\n\n    render(){\n        return(\n            <div className={this.props.txHash!==\"\" || this.props.txHash.error ? \"view-on-etherscan\" : \"not-visible\"}>\n                {this.props.txHash? this.props.txHash.error ? \n                \"Something went wrong\"\n                : \n                <div>\n                    <a href={\"https://ropsten.etherscan.io/tx/\"+this.props.txHash} \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"> \n                \n                    View Tx on Etherscan</a>\n                </div>\n                :\"\"}\n                \n            </div>\n        );\n    }\n}\n\n\n","import React from \"react\";\nimport ReactLoading from 'react-loading';\nimport \"../../style/waiting.css\";\n\nexport class WaitingForComfirmation extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {close: false};\n        this.close = this.close.bind(this);\n    }\n\n    close(){\n        this.setState({close:true});\n    }\n\n    render(){\n        return(\n            <div className={this.props.waiting && !this.state.close ? \"waiting-container\" : \"not-visible\"}>\n                <div className=\"popup\">\n                    <div className=\"loading\">\n                        <ReactLoading type={\"spin\"} color={\"#ffffff\"} height={'55%'} width={'55%'} />\n                            {/* <button onclick={this.close}> Ok </button> */}\n                    </div>\n                    <div className=\"msg-loading\">\n                        Your transaction is being processed in the blockchain.\n                        Please wait until it gets mined.\n                    </div>\n                \n                </div>\n                           \n            </div>\n        );\n    }\n}\n\n\n","import React from \"react\";\nimport { ViewOnEtherscan } from \"./ViewOnEtherscan\"\nimport \"../../style/change-price.css\"\nimport { WaitingForComfirmation } from \"./WaitingForComfirmation\";\n\n/**\n* @dev This is a generic component for confirming a transaction in the blockchain with\n* visual updating of the tx status.\n* @param waiting boolean that indicates if we are waiting for a tx for being proccessed \n* in the blockchain or not.\n* @param txHash of the tx we are confirming.\n* @param successful boolean that indicates if the tx with txHash actually got mined or not.\n*/\nexport class LiveBlockchainStatus extends React.Component{\n      \n\n    render(){ return (\n        <div > \n                    <div className=\"tx-hash-price\">\n                        <ViewOnEtherscan\n                            txHash={this.props.txHash}\n                        />\n                        \n                    </div>\n      \n                    <WaitingForComfirmation\n                        waiting={this.props.waiting}\n                        txHash = {this.props.txHash}\n                    />\n                    <div className={this.props.successful ? \"success justify-center\" : \"not-visible\"}>\n                    Your transaction was successful!\n                    </div>     \n        </div>\n\n    )}\n}\n","import React from \"react\";\nimport \"../../style/change-price.css\"\nimport { LiveBlockchainStatus } from \"../Generics/LiveBlockchainStatus\";\n\n\nexport class ChangePrice extends React.Component{\n\n    constructor(props){\n        super(props);\n        \n        this.state = {newPrice: \"\", txHash: \"\", waiting: false, successful: false};\n    \n        this.handleChangenewPrice = this.handleChangenewPrice.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.close = this.close.bind(this);\n    \n        this.priceInput = React.createRef();\n        this.container = React.createRef();\n     \n      }\n\n    //   componentDidMount(){\n    //     this.container.Style.Add(\"background-image\", \"\");\n    //   }\n    handleChangenewPrice(event) {\n        this.setState({newPrice: event.target.value});\n        \n      }\n    \n    close(){\n        this.props.close();\n    }\n\n      async handleSubmit(event) {\n        event.preventDefault();\n\n        let newPrice;\n        console.log(\"this.state.price: \",this.state.price);\n        if(+this.state.newPrice>999){\n            newPrice = (Math.floor(+this.state.newPrice)).toString()+\"000000000000000000\";\n            console.log(\"newPrice: \",newPrice);\n        }else{\n            newPrice = (+this.state.newPrice*1000000000000000000).toString();\n            console.log(\"newPrice: \",newPrice);\n        }\n        const tokenId = this.props.id;\n        console.log(\" aaa price: \",newPrice,\" tokenId: \",tokenId);\n    \n    \n        console.log(\"about to send tx: \");\n        const tx =  await this.props.setPrice( newPrice, tokenId );\n        this.setState({waiting: true});\n        console.log(tx);\n        if (tx.error){\n            this.setState({txHash: tx});\n            this.setState({waiting: false});\n        }else{\n            this.setState({txHash: tx.hash});\n            this.priceInput.current.value = \"\";\n            const res = await this.props.waitForMinedConfirmation(tx.hash, (tx) => {\n                this.setState({waiting: false});\n                this.setState({successful: true});\n                const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n                const currentUrl = window.location.href;\n                sleep(2000).then( () => window.location.href = currentUrl).catch( error => console.log(\"error while reloading:\",error));\n                \n                console.log(\"tx mined: \", tx.hash);\n            })\n            console.log(\"res: \",res);\n            \n            \n        }\n        \n      \n      }\n  \n  render(){\n    return (\n        <div className = {this.props.visible ? \"visible\" : \"not-visible\" }> \n        <div  className=\"change-price\">\n            <div className=\"close-button\">\n                <button onClick={this.close} className=\"button-close-button\">x</button>\n            </div>\n            <div className=\"title-price justify-center\">\n                Change The Price Of Your NFT\n                </div>\n            <div className=\"paragraph-price\">\n                Current price: {parseInt(this.props.price)/1000000000000000000} ETH\n                </div>\n            <form onSubmit={this.handleSubmit} className=\"form-container-price\">\n                <div >\n                    <div className=\"justify-center message-label-price\">\n                       New Price (ETH):\n                    </div>\n                    <div>\n                        <input \n                            id=\"input\"\n                            className=\"price-input\"\n                            onChange={this.handleChangenewPrice}\n                            ref={this.priceInput}\n                            required\n                            type=\"number\"\n                            step={0.000000000000000001}\n                            />\n                    </div>\n                    <div>\n                        <LiveBlockchainStatus\n                            txHash={this.state.txHash}\n                            waiting={this.state.waiting}\n                            successful = {this.state.successful}\n                        />\n                    </div>\n                    {/* <div className=\"tx-hash-price\">\n                        <ViewOnEtherscan\n                            txHash={this.state.txHash}\n                        />\n                    </div>\n      \n                    <WaitingForComfirmation\n                        waiting={this.state.waiting}\n                        txHash = {this.state.txHash}\n                    />\n                    <div className={this.state.successful ? \"success\" : \"not-visible\"}>\n                    Your transaction was successful!\n                    </div>     \n                         */}\n                </div>\n                <div className=\"form-group-price\">\n                    <input className=\"mybutton-price\" type=\"submit\" value=\"Change Price\" />\n                </div>\n            </form>\n            \n        </div>\n        </div>\n        );\n    }\n}","import React from \"react\";\nimport { LiveBlockchainStatus } from \"./LiveBlockchainStatus\"\nimport \"../../style/popup.css\"\n\n\n/**\n* @dev This is a generic popup that wraps the LiveBlockchainStatus for confirming a transaction\n* in the blockchain with visual updating of the tx status.\n* @param waiting boolean that indicates if we are waiting for a tx for being proccessed \n* in the blockchain or not.\n* @param txHash of the tx we are confirming.\n* @param successful boolean that indicates if the tx with txHash actually got mined or not.\n* @param close function that alters the visibility of the popup.\n*/\nexport class Popup extends React.Component{\n\n\n\n    render(){ return (\n        <div className = {this.props.visible ? \"visible\" : \"not-visible\" }> \n         <div  className=\"change-price\">\n            <div className=\"close-button\">\n                <button onClick={this.props.close} className=\"button-close-button\">x</button>\n            </div>\n            \n            <form onSubmit={this.handleSubmit} className=\"form-container-price\">\n                <div >\n                    <div className={!this.props.txHash?\"justify-center message-label-price\":\"not-visible\"}>\n                       Please confirm your transaction on your wallet.\n                    </div>\n                    \n                    <div>\n                        <LiveBlockchainStatus\n                            txHash={this.props.txHash}\n                            waiting={this.props.waiting}\n                            successful = {this.props.successful}\n                        />\n                    </div>\n                        \n                </div>\n            </form>\n            \n        </div>\n        </div>\n\n    );}\n}\n","import React from \"react\";\nimport \"../../style/change-price.css\"\nimport { LiveBlockchainStatus } from \"../Generics/LiveBlockchainStatus\";\n\n\nexport class Transfer extends React.Component{\n\n    constructor(props){\n        super(props);\n        \n        this.state = {to: \"\", txHash: \"\", waiting: false, successful: false};\n    \n        this.handleChangeTo= this.handleChangeTo.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.close = this.close.bind(this);\n    \n        this.toInput = React.createRef();\n        this.container = React.createRef();\n     \n      }\n\n    async handleChangeTo(event) {\n        \n        await this.setState({to: event.target.value});\n        console.log(\"to: \",this.state.to);\n        \n      }\n    \n    close(){\n        this.props.close();\n    }\n\n      async handleSubmit(event) {\n        event.preventDefault();\n\n        const tokenId = this.props.id;\n        console.log(\" to: \",this.state.to);\n        console.log(\" tokenId: \",tokenId);\n        console.log(\"this.props.my_address\", this.props.my_address);\n    \n        console.log(\"about to send tx: \");\n        const tx =  await this.props.safeTransfer(this.props.my_address,  this.state.to , tokenId );\n        this.setState({waiting: true});\n        console.log(tx);\n        if (tx.error){\n            this.setState({txHash: tx});\n            this.setState({waiting: false});\n        }else{\n            this.setState({txHash: tx.hash});\n            this.toInput.current.value = \"\";\n            const res = await this.props.waitForMinedConfirmation(tx.hash, (tx) => {\n                this.setState({waiting: false});\n                this.setState({successful: true});\n                const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n                const currentUrl = window.location.href;\n                sleep(2000).then( () => window.location.href = currentUrl).catch( error => console.log(\"error while reloading:\",error));\n                \n                console.log(\"tx mined: \", tx.hash);\n            })\n            console.log(\"res: \",res);\n            \n            \n        }\n        \n      \n      }\n  \n  render(){\n    return (\n        <div className = {this.props.visible ? \"visible\" : \"not-visible\" }> \n        <div  className=\"change-price\">\n            <div className=\"close-button\">\n                <button onClick={this.close} className=\"button-close-button\">x</button>\n            </div>\n            <div className=\"title-price justify-center\">\n                Tranfer your NFT to a different address\n                </div>\n            <div className=\"paragraph-price\">\n            Be careful! transfering the NFT to the wrong address can mean the permanent loss of your token.\n                </div>\n            <form onSubmit={this.handleSubmit} className=\"form-container-price\">\n                <div >\n                    <div className=\"justify-center message-label-price\">\n                       Transfer to Ethereum address:\n                    </div>\n                    <div>\n                        <input \n                            id=\"input\"\n                            className=\"to\"\n                            onChange={this.handleChangeTo}\n                            ref={this.toInput}\n                            required\n                            type=\"text\"\n                            />\n                    </div>\n                    <div>\n                        <LiveBlockchainStatus\n                            txHash={this.state.txHash}\n                            waiting={this.state.waiting}\n                            successful = {this.state.successful}\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group-price\">\n                    <input className=\"mybutton-price\" type=\"submit\" value=\"Transfer\" />\n                </div>\n            </form>\n            \n        </div>\n        </div>\n        );\n    }\n}","import React from \"react\";\nimport \"../../style/imageNFT.css\";\nimport { ChangePrice } from \"../MyWallet/ChangePrice\";\nimport { ethers } from \"ethers\";\nimport { Popup } from \"../Generics/Popup\";\nimport { Transfer } from \"../MyWallet/Transfer\"\nimport { BiCoin } from \"react-icons/bi\";\nimport { FaEthereum } from \"react-icons/fa\";\nimport { GiTwoCoins } from \"react-icons/gi\";\nimport { IoIosSend } from \"react-icons/io\";\nimport { GiPalette } from \"react-icons/gi\";\nimport { MdMessage } from \"react-icons/md\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { IoPricetag } from \"react-icons/io5\"; \nimport { RiPriceTag2Fill } from \"react-icons/ri\";\nimport { RiShoppingBag3Fill } from \"react-icons/ri\";\nimport { RiShoppingCart2Fill } from \"react-icons/ri\";\nimport { HiCash } from \"react-icons/hi\";\nimport { TiStar } from \"react-icons/ti\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n useHistory\n} from \"react-router-dom\";\n\n\nexport class ImageNFT extends React.Component{\n\n  constructor(props){\n    super(props);\n    \n    this.state ={forSale : this.props.uri.forSale, changePriceVisble:false, \n      popupVisible: false, waiting:false, successful:false, transferVisble:false};\n    this.setForSale = this.setForSale.bind(this);\n    this.buy = this.buy.bind(this);\n    this.mint = this.mint.bind(this);\n    this.setSelectedId = this.setSelectedId.bind(this);\n    this.buyDisable = this.buyDisable.bind(this);\n    this.changePrice = this.changePrice.bind(this);\n    this.closeChangePrice = this.closeChangePrice.bind(this);\n    this.closePopup = this.closePopup.bind(this);\n    this.closeTransfer = this.closeTransfer.bind(this);\n    this.transfer = this.transfer.bind(this);\n    //this didn't work\n    this.reloadWallet = this.reloadWallet.bind(this);\n    console.log(\"props NFT image: \",this.props);\n    \n  }\n\n  //this didn't work\n  reloadWallet(){\n      const history = useHistory();\n     history.push('/wallet');\n    }\n  \n\n  buyDisable(){\n    console.log(\"buy button disable\");\n  }\n\n  closeChangePrice(){\n    this.setState({changePriceVisble:false});\n  }\n\n  changePrice(){\n    this.setState({changePriceVisble:true});\n  }\n\n  transfer(){\n    this.setState({transferVisble:true});\n  }\n\n  closePopup(){\n    this.setState({popupVisible:false});\n  }\n\n  closeTransfer(){\n    this.setState({transferVisble:false});\n  }\n\n  componentDidMount(){\n    console.log(\"this.props.uri.forSale\",this.props.uri.forSale);\n    this.setState({forSale:this.props.uri.forSale});\n  }\n\n  setSelectedId(){\n    const CID = (this.props.uri.image).substring(7);\n    console.log(\"CID: \",CID);\n    const pinata_image_url = \"https://gateway.pinata.cloud/ipfs/\"+CID;\n      this.props.setSelectedId(this.props.uri.id,pinata_image_url, this.props.uri.price);\n    }\n  \n    async mint() {\n      console.log(\"minting...\",this.props.uri.id);\n      const tokenId = this.props.uri.id;\n      const price = this.props.uri.price;\n      const royalties = this.props.uri.royalties;\n      const royaltyRecepient = royalties.address;\n      const royaltyValue = parseFloat(royalties.pctValue)*100;\n\n\n      const abi = [\n        \"function mintThroughPurchase(address _to, uint _tokenId, address royaltyRecipient, uint256 royaltyValue) external payable\"\n      ];\n      const iface = new ethers.utils.Interface(abi);\n      const data = iface.encodeFunctionData(\"mintThroughPurchase\", [this.props.to, tokenId, royaltyRecepient, royaltyValue]);\n        \n        const params = [\n          {\n            from: this.props.to,\n            to: this.props.marketPlaceAddress,\n            value: price, \n            data: data\n          },\n        ];\n        this.setState({popupVisible: true});\n        console.log(\"about to send tx\");\n        await window.ethereum\n          .request({\n            method: 'eth_sendTransaction',\n            params,\n          })\n          .then(async (txHash) => {\n            this.setState({waiting: true});\n            console.log(txHash);\n            this.setState({txHash: txHash});\n            const res = await this.props.waitForMinedConfirmation(txHash, (tx) => {\n              this.setState({waiting: false});\n              this.setState({successful: true});\n              console.log(\"tx mined: \", tx);\n              const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n               const currentUrl = window.location.href;\n              sleep(2000).then( () => window.location.href = currentUrl).catch( error => console.log(\"error while reloading:\",error));\n    \n          });\n            // The result varies by by RPC method.\n            // For example, this method will return a transaction hash hexadecimal string on success.\n          })\n          .catch((error) => {\n            console.log(error);\n            // If the request fails, the Promise will reject with an error.\n          });\n        \n    }\n\n  async buy() {\n    const tokenId = this.props.uri.id;\n    console.log(\"id: \",tokenId);\n    console.log(this.props.forMint);\n    console.log(this.props.marketPlaceAddress);\n    const price = this.props.uri.price;\n    console.log(\"price: \",price);\n\n    const abi = [\n    \"function purchaseToken(uint _tokenId) external payable\"\n    ];\n    const iface = new ethers.utils.Interface(abi);\n    const data = iface.encodeFunctionData(\"purchaseToken\", [tokenId]);\n    \n    const params = [\n        {\n        from: this.props.address,\n        to: this.props.marketPlaceAddress,\n        value: price, \n        data: data\n        },\n    ];\n    \n    console.log(\"params:\",params);\n    this.setState({popupVisible: true});\n    console.log(\"about to send tx\");\n    await window.ethereum\n        .request({\n        method: 'eth_sendTransaction',\n        params,\n        })\n        .then(async (txHash) => {\n        this.setState({waiting: true});\n        console.log(txHash);\n        this.setState({txHash: txHash});\n        const res = await this.props.waitForMinedConfirmation(txHash, (tx) => {\n          this.setState({waiting: false});\n          this.setState({successful: true});\n          console.log(\"tx mined: \", tx);\n          const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n          const currentUrl = window.location.href;\n          sleep(2000).then( () => window.location.href = currentUrl).catch( error => console.log(\"error while reloading:\",error));\n    \n      });\n    })\n        .catch((error) => {\n        console.log(error);\n        // If the request fails, the Promise will reject with an error.\n        });\n    \n  \n  }\n\nasync setForSale()\n{\n  console.log(\"in setForSale. forsale?: \",this.state.forSale);\n  this.setState({popupVisible: true});\n  console.log(\"about to send tx\");\n  const tx = await this.props.setForSale(this.props.uri.id, !this.props.uri.forSale);\n  this.setState({waiting: true});\n  \n  if (tx.error){\n    this.setState({forSale: !this.state.forSale});\n    this.setState({txHash: tx});\n    this.setState({waiting: false});\n  }else{\n    this.setState({forSale: !this.state.forSale});\n    this.setState({txHash: tx.hash});\n    const res = await this.props.waitForMinedConfirmation(tx.hash, (tx) => {\n      this.setState({waiting: false});\n      this.setState({successful: true});\n      console.log(\"tx mined: \", tx.hash);\n      console.log(\"changed forSale in tx: \",tx.hash);\n      const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n      const currentUrl = window.location.href;\n      sleep(2000).then( () => window.location.href = currentUrl).catch( error => console.log(\"error while reloading:\",error));\n    \n\n  })\n    \n    }\n  \n  \n}\n  \n  render(){\n    const CID = (this.props.uri.image).substring(7);\n    let pinata_image_url;\n    if(CID){\n      pinata_image_url = \"https://gateway.pinata.cloud/ipfs/\"+CID;\n    }else{\n      pinata_image_url = \"https://gateway.pinata.cloud/ipfs/QmNZxE7QumQqD4WkvPBps7yfwW876Ns55dCf6tCbcFvF5a\";//change this for logo later\n    }\n    \n  return (\n    <div className=\"nft-container\">\n      <div className=\"NFTTitle\" style={this.props.uri.name.length<25?{\"font-size\":\"2rem\"}:{\"font-size\":\"1.6rem\"}}>\n        {this.props.uri.name}\n      </div>\n      <div className=\"imageContainer\">\n        <a href={pinata_image_url} target=\"_blank\" rel=\"noopener noreferrer\">\n         <img \n          src={pinata_image_url}\n          alt={this.props.uri.name}\n          className=\"imageNFT\"\n          />\n        </a>\n      </div>\n      <div className={this.props.mywallet&&this.props.uri.message===\"\" ? \"dont-show\" : \"msg-title\"}>\n      <MdMessage style={{verticalAlign:\"middle\"}}/> Message:\n      </div>\n      <div className={this.props.mywallet&&this.props.uri.message===\"\" ? \"dont-show\" : \n        !this.props.mywallet&&this.props.uri.message===\"\" || this.props.uri.message===undefined ? \"no-message\" : \"message\"}>\n          {!this.props.mywallet&&this.props.uri.message===\"\" || this.props.uri.message===undefined  ? \n          \"This NFT has no message yet. You can set it yourself if you buy this NFT!\" :\n          this.props.uri.message} \n      </div>\n      <div className=\"artist-container\">\n        <div className=\"artist\">\n         <GiPalette /> &nbsp;  artist: \n        </div>\n        <a href={this.props.uri.attributes.webpage} className=\"link\" target=\"_blank\" rel=\"noopener noreferrer\">\n          {this.props.uri.attributes.artist}\n        </a>\n      </div>\n      <div className=\"description\">\n        Description: {this.props.uri.description}\n      </div>\n      \n      <div className=\"price\">\n       <FaEthereum style={{verticalAlign:\"middle\",fontSize:\"1.5rem\"}}/> {parseInt(this.props.uri.price)/1000000000000000000}  ETH \n      </div>  \n      <div className={this.props.mywallet ? \"dont-show\" : \"button-container\"}>\n\n        <button onClick={this.props.mywallet||!this.props.uri.forSale ? this.buyDisable :\n                                                   this.props.forMint ? this.mint : this.buy}\n        className={this.props.uri.owned ? \"button-owned\"  : \"button\" }>\n          {\n            this.props.forMint ? <GiTwoCoins style={{verticalAlign:\"middle\"}}/> :\n            this.props.uri.forSale?  <TiStar style={{verticalAlign:\"middle\"}}/>  :\n            \"\"\n          }\n          \n          \n          {this.props.uri.owned ? \"You Own This NFT !\" : \n          this.props.forMint ?  \" Mint!\":\n          this.props.uri.forSale ? \" BUY\" : \"Not For Sale\"}\n\n        </button>\n      </div>\n      <div className={!this.props.mywallet||this.props.uri.message!==\"\" ? \"dont-show\" : \"text-center\"}>\n        <Link to={{ pathname: \"/setmessage\" }}>\n          <button className=\"setMessage\" onClick={this.setSelectedId}>\n          <MdMessage style={{verticalAlign:\"middle\"}}/>  Set The Message!</button>\n        </Link>\n        \n      </div>  \n      <div className={!this.props.mywallet ? \"dont-show\" : \"text-center\"}>\n    \n        <button className=\"setPrice\" onClick={this.changePrice}> \n        <HiCash style={{verticalAlign:\"middle\"}}/>&nbsp; Change Price </button>\n            <ChangePrice \n              id = {this.props.uri.id}\n              price = {this.props.uri.price}\n              visible = {this.state.changePriceVisble}\n              close = {()=>{this.closeChangePrice()}}\n              setPrice = { (price, tokenId) => {\n                return this.props.setPrice(price, tokenId);\n              }}\n              waitForMinedConfirmation={ (tx_hash, func) => {\n                return this.props.waitForMinedConfirmation(tx_hash, func);\n              }}\n            />\n\n      </div> \n      <div className={!this.props.mywallet ? \"dont-show\" : \"forsale-transfer-container\"}>\n        <div className=\"for-sale-container\"> \n          <div className=\"for-sale-label\">\n            <IoPricetag style={{verticalAlign:\"middle\"}}/>&nbsp;For sale? \n            </div>\n          <div className=\"check-for-sale\">\n              <label >\n                <input type=\"checkbox\" checked={this.props.uri.forSale} onChange={this.setForSale}/>\n                <span ></span>\n              </label>\n            </div>\n        </div> \n        <div className=\"transfer-container\">\n\n          <button className=\"transfer-button\" onClick={this.transfer}> \n          <IoIosSend style={{verticalAlign:\"middle\"}}/>&nbsp;Transfer</button>\n          <Transfer \n            my_address={this.props.address}\n            safeTransfer = {(owner, to, tokenId) => {\n            return this.props.safeTransfer(owner, to, tokenId)}}\n            id = {this.props.uri.id}\n            price = {this.props.uri.price}\n            visible = {this.state.transferVisble}\n            close = {()=>{this.closeTransfer()}}\n            waitForMinedConfirmation={ (tx_hash, func) => {\n              return this.props.waitForMinedConfirmation(tx_hash, func);\n            }}\n          />\n          \n        </div> \n      </div>\n\n          <Popup \n            visible = {this.state.popupVisible}\n            txHash={this.state.txHash}\n            waiting={this.state.waiting}\n            successful = {this.state.successful}\n            close = {()=>{this.closePopup()}}\n          />\n\n\n    </div>\n  );\n}\n}\n","import React from \"react\";\nimport \"../../style/carousel.css\"\nimport Coverflow from 'react-coverflow';\nimport { ImageNFT } from '../Gallery/ImageNFT';\n\nexport class Carousel extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.fn = this.fn.bind(this);\n        this.state={background:\"000000\"};\n    }\n\n\n    fn (active) {\n        if(active !== undefined){\n            // console.log(\"function\", active);\n            // let R = (active*4).toString(16);\n            // if (R.length<2){R = \"0\"+R};\n            // let G = (21 - (active*4)).toString(16);\n            // if (G.length<2){G = \"0\"+G};\n            // let B = (36 + active*4).toString(16);\n            // if (B.length<2){B = \"0\"+B};\n            // this.setState({background: R + G + B});\n            // console.log(this.state.background);\n            if(active%3===0){\n                this.setState({background: \"02579b\"});\n            }else if(active%3===1){\n                this.setState({background: \"007579\"});\n            }else{\n                this.setState({background: \"40307b\"});\n            }\n            }\n        }\n        \n        \n      \n\n    render(){\n        return(\n            <div id=\"carousel-3d-container\" \n           style={{\"background\" : \"linear-gradient(to top, transparent 1%, black 40%), #\"+this.state.background,\n                        \"transition\":\"background-color 0.8s ease\"}}>\n                \n                <Coverflow\n                    displayQuantityOfSide={1.3}\n                    infiniteScroll={false}\n                    enableHeading={false}\n                    otherFigureScale={0.3}\n                    currentFigureScale={1.15}\n                    enableScroll={false}\n                    width={900}\n                    height={760}\n                    \n                    \n                    >\n                    \n                        {this.props.nfts.map((key,index)=>{\n                        return (\n                            <div onClick={(key)=>this.fn(index)} key={index}>\n                                \n                            <ImageNFT\n                                uri = {key}\n                                {...this.props}\n                            />\n                            </div>\n                    );}\n                        )}\n                        \n                \n                    </Coverflow>\n            </div>\n        );\n    }\n    \n}","import React from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport {Filter} from  \"./Filter\";\nimport \"react-pagination-js/dist/styles.css\"; // import css\nimport { ImageNFT } from \"./ImageNFT\";\nimport \"../../style/pagination.css\"\nimport { CgViewGrid } from \"react-icons/cg\";\nimport { CgUiKit } from \"react-icons/cg\";\n\n\n\nimport { Carousel } from \"../Gallery/Carousel\";\n\n\n  export class PaginationNFTs extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        const demo_NFT = {\"description\": \"loading\",\"external_url\": \"unkown\",\"image\": \"loading\",\"name\": \"...Loading\",\"attributes\": [ {\"artist\": \"loading\"},{\"webpage\":\"https://github.com/oscarsernarosero?tab=overview&from=2021-04-01&to=2021-04-27\"}],forSale:false}\n        this.state = {nfts: [demo_NFT], mounted: false, page:1, ids: [-1], myIds: [-1],filteredIds:[],pageSize:6, view:0, filterBy:{topic:[], artist:[],language:-1}};\n        this.changeCurrentPage = this.changeCurrentPage.bind(this);\n        this.listView = this.listView.bind(this);\n        this.albumView = this.albumView.bind(this);\n        this.filterNFTs = this.filterNFTs.bind(this);\n        console.log(this.state);\n        this.DB = require(\"../../localDB/attributes.json\");\n        \n      }\n\n    async componentDidMount(){\n      //we wait until the Dapp loads the wallet.\n        const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n        while(!this.props.address){\n          await sleep(500);  \n        }\n        \n        //we get all the NFT Ids as long as we are not in the wallet's view\n        if(!this.state.mywallet){\n          await this.getNFTids();\n        }\n        \n\n        //we store the list of all NFTs owned by the wallet in myIds\n        let myIds = await this.props.getNFTidsByAddress(this.props.address);\n\n        //also, there is no filter yet, therefore the filtered NFTs are all\n        //the NFTs, or the owned NFTs depending if we are in the wallet view or not.\n        if(this.state.mywallet){\n          await this.setState({filteredIds: myIds});\n        }else{\n          await this.setState({filteredIds: this.state.ids});\n        }\n\n        //if the wallet owns at least 1 NFT, then we store the Ids \n        if(myIds.length>0){\n            myIds = myIds.map( (_id) => {return _id._hex;});\n            this.setState({mounted: true, myIds: myIds});\n          }\n          //otherwise, we simply set the state to empty arrays to errase\n          // the 'loading' demo NFT that users see at the beginning \n          //(only necessary for wallet view)\n        else if(this.props.mywallet){\n            await this.setState({myIds: []});\n            await this.setState({nfts: []});\n          }\n\n        //if we receive a different pageSize, we set it.\n        if(this.props.pageSize){\n          if(this.props.pageSize != this.state.pageSize){\n              this.setState({pageSize: this.props.pageSize});\n        }}\n        //finally, we request the blockchain for the data of the NFTs\n        //, but only the ones that we need to display.\n        await this.getPageData();\n            \n        \n    }\n\n    componentDidCatch(){\n        const demo_NFT = {\"description\": \"error\",\"external_url\": \"unkown\",\"image\": \"loading\",\"name\": \"error\",\"attributes\": [ {\"artist\": \"loading\"},{\"webpage\":\"https://github.com/oscarsernarosero?tab=overview&from=2021-04-01&to=2021-04-27\"}],forSale:false}\n        this.setState({nfts: [demo_NFT]});\n      }\n\n    async componentDidUpdate(prevProps){\n        if(prevProps.address !== this.props.address && this.state.mounted === true){\n            const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n            await sleep(1500);    \n            if(!this.state.mywallet ){\n              await this.getNFTids();\n            }\n            let myIds = await this.props.getNFTidsByAddress(this.props.address);\n            console.log(\"myIds raw didupdatw\",myIds);\n            if(myIds.length>0){\n                myIds = myIds.map( (_id) => {return _id._hex;});\n                console.log(\"myIds \",myIds);\n                this.setState({myIds: myIds});\n            }else if(myIds.length==0 && this.state.mywallet){\n              this.setState({myIds: []});\n              this.setState({nfts: []});\n            }\n            await this.getPageData();\n        }\n    }\n\n    listView(){\n      this.setState({view:1});\n    }\n    albumView(){\n        this.setState({view:0});\n    }\n\n    //let intersection = arrA.filter(x => arrB.includes(x));\n    //let union = [...new Set([...arrA, ...arrB])];\n    filterNFTs(_byTopic, _byArtist, _byLanguage){\n      let filteredByTopic = [];\n      let filteredByArtist = [];\n      let filteredByLanguage = [];\n      let filteredResult = [];\n\n      if(_byTopic.length>0){\n        console.log(\"filtering by topic...\");\n        let thisTopic;\n        _byTopic.map( (_topic) => {\n            try{\n              thisTopic = this.DB.topic[_topic];\n            }catch{\n              thisTopic =[]\n            }\n            filteredByTopic = [...new Set([...filteredByTopic, ...thisTopic])];\n            console.log(\"filteredByTopic: \",filteredByTopic);\n        })\n      }else{\n        filteredByTopic = this.state.ids;\n      }\n\n      if(_byArtist.length>0){\n        console.log(\"filtering by artist...\");\n        let thisArtist;\n        _byArtist.map( (_artist) => {\n            try{\n              thisArtist = this.DB.artist[_artist];\n            }catch{\n              thisArtist =[]\n            }\n            filteredByArtist = [...new Set([...filteredByArtist, ...thisArtist])];\n            console.log(\"filteredByArtist: \",filteredByArtist);\n        })\n      }else{\n        filteredByArtist = this.state.ids;\n      }\n\n      if(_byLanguage>=0){\n        console.log(\"filtering by language...\");\n        filteredByLanguage = this.DB.language[_byLanguage];\n        console.log(\"filteredByLanguage: \",filteredByLanguage);\n      }else{\n        filteredByLanguage = this.state.ids;\n      }\n      //intersection of all three results:\n      filteredResult = filteredByTopic.filter(x => filteredByArtist.includes(x));\n      console.log(filteredResult);\n      filteredResult = filteredResult.filter(x => filteredByLanguage.includes(x));\n      console.log(filteredResult);\n\n      const finalResult =  (this.state.ids).filter(x => filteredResult.includes(x));\n      console.log(finalResult);\n      this.setState({filteredIds:finalResult}, () => {\n        this.getPageData();\n      });\n      \n    }\n\n\n    async changeCurrentPage(numPage) {\n        this.setState({ page: numPage });\n        console.log(\"change to page\",this.state.page);\n        await this.getPageData();\n        //I am doing this double because it doesn't work if I do it once.\n        this.setState({ page: numPage });\n        console.log(\"change to page\",this.state.page);\n        await this.getPageData();\n      };\n\n    async getPageData(){\n        const startAt = this.state.pageSize * (this.state.page-1);\n        const endAt = startAt + this.state.pageSize;\n        const pageIds = this.state.filteredIds.slice(startAt,endAt);\n        // let pageIds;\n        // if(this.props.mywallet){\n        //   pageIds = this.state.myIds.slice(startAt,endAt);\n        // }else{\n        //   pageIds = this.state.ids.slice(startAt,endAt);\n        // }\n        const nfts = [];\n        for(let i=0; i<pageIds.length;i++){\n            const data = await this.props.getNFTData(pageIds[i]);\n            if(!this.props.mywallet){\n              data[\"owned\"] = this.state.myIds.includes(pageIds[i]);\n\n            }\n            nfts.push(data);\n        }\n        this.setState({nfts: nfts});\n        console.log(\"nfts final pagination: \",this.state.nfts);\n    }\n    \n      async getNFTids(){\n        // let ids = [];\n        //  if(this.props.address) {\n            let ids = await this.props.getAllNFTsIdsOnly();\n            this.setState({ids: ids});\n            console.log(\"getNFTids: \",ids);\n\n        //  }else{\n        //     this.state = {ids: [0]};\n        // }\n        \n      }\n      \n      render(){\n        return (\n            <div >\n              <div>\n                    <button onClick={this.listView} \n                    className={this.state.view ? \"grid-active\": \"grid-inactive\"}>\n                      <CgViewGrid style={{verticalAlign:\"middle\", fontSize:\"1.25rem\"}}\n                    />&nbsp;Grid</button>\n                    <button onClick={this.albumView}\n                    className={!this.state.view ? \"cover-active\": \"cover-inactive\"}>\n                      <CgUiKit style={{verticalAlign:\"middle\",fontSize:\"1.25rem\"}}\n                    />&nbsp;Cover</button>\n                </div>\n                <div>\n                  <Filter\n                  applyFilter = {(_byTopic, _byArtist, _byLanguage) => {\n                    return this.filterNFTs(_byTopic, _byArtist, _byLanguage)}}/>\n                </div>\n               <div className={this.state.view ? \"\": \"not-visible\"}>\n               <ul className=\"list\">\n                {this.state.nfts.map((item,index)=>{\n                    return <li className=\"galleryItem\"\n                    key={index}>\n                        <ImageNFT\n                            address = {this.props.address}\n                            marketPlaceAddress = {this.props.marketPlaceAddress}\n                            uri = {item}\n                            setTokenMessage={ (_tokenId, _msg ) => {\n                                return this.props.setTokenMessage(_tokenId, _msg );\n                            }}\n                            mywallet = {this.props.mywallet}\n                            setForSale = { (tokenId, forSale) => {\n                                return this.props.setForSale(tokenId, forSale);\n                              }}\n                              setSelectedId = {(id, imageUrl, price) => {\n                                return this.props.setSelectedId(id, imageUrl), price;\n                            }}\n                            setPrice = { (price, tokenId) => {\n                                return this.props.setPrice(price, tokenId);\n                              }}\n                              waitForMinedConfirmation={ (tx_hash, func) => {\n                                return this.props.waitForMinedConfirmation(tx_hash, func);\n                              }}\n                              \n                              forMint={false}\n                              to = {this.props.to}\n                              waitForMinedConfirmation={ (tx_hash, func) => {\n                                return this.props.waitForMinedConfirmation(tx_hash, func);\n                              }}\n                              safeTransfer = { (owner, to, tokenId) => {\n                                return this.props.safeTransfer(owner, to, tokenId);\n                              }}\n                        /></li>\n                })}\n                </ul>\n                </div>\n                <div className={this.state.view ? \"not-visible\":\"\" }>\n                  <Carousel\n                      nfts={this.state.nfts}\n                      address = {this.props.address}\n                      marketPlaceAddress = {this.props.marketPlaceAddress}\n                      mywallet = {this.props.mywallet}\n                      forMint={false}\n                      to = {this.props.to}\n                      setTokenMessage={ (_tokenId, _msg ) => {\n                        return this.props.setTokenMessage(_tokenId, _msg );\n                       }}\n                       setForSale = { (tokenId, forSale) => {\n                        return this.props.setForSale(tokenId, forSale);\n                      }}\n                      setSelectedId = {(id, imageUrl, price) => {\n                      return this.props.setSelectedId(id, imageUrl), price;\n                      }}\n                      setPrice = { (price, tokenId) => {\n                          return this.props.setPrice(price, tokenId);\n                        }}\n                      waitForMinedConfirmation={ (tx_hash, func) => {\n                      return this.props.waitForMinedConfirmation(tx_hash, func);\n                      }}\n                      safeTransfer = { (owner, to, tokenId) => {\n                        return this.props.safeTransfer(owner, to, tokenId);\n                      }}\n                      \n                    />    \n                  </div> \n                  <div className=\"centered\">\n                    <Pagination\n                    currentPage={this.state.page}\n                    sizePerPage={this.state.pageSize}\n                    totalSize={this.props.mywallet ? this.state.myIds.length : this.state.ids.length}\n                    changeCurrentPage={this.changeCurrentPage}\n                    \n                    />\n                    </div>    \n              </div>\n            );\n        }\n}","import React from \"react\";\nimport Pagination from \"react-pagination-js\";\nimport {Filter} from  \"./Filter\";\nimport \"react-pagination-js/dist/styles.css\"; // import css\nimport { ImageNFT } from \"./ImageNFT\";\nimport \"../../style/pagination.css\";\nimport { CgViewGrid } from \"react-icons/cg\";\nimport { CgUiKit } from \"react-icons/cg\";\n\nimport { Carousel } from \"../Gallery/Carousel\";\n\n\n  export class PaginationForMinting extends React.Component{\n\n\n    constructor(props){\n        super(props);\n        const demo_NFT = {\"description\": \"loading\",\"external_url\": \"unkown\",\"image\": \"loading\",\"name\": \"...Loading\",\"attributes\": [ {\"artist\": \"loading\"},{\"webpage\":\"https://github.com/oscarsernarosero?tab=overview&from=2021-04-01&to=2021-04-27\"}],forSale:false}\n        this.state = {nfts: [demo_NFT], mounted: false, page:1, ids: [-1], myIds: [-1], filteredIds:[],pageSize:6, view:0, filterBy:{topic:[], artist:[],language:-1}};\n        this.changeCurrentPage = this.changeCurrentPage.bind(this);\n        this.listView = this.listView.bind(this);\n        this.albumView = this.albumView.bind(this);\n        this.filterNFTs = this.filterNFTs.bind(this);\n        console.log(this.state);\n        this.DB = require(\"../../localDB/attributes.json\");\n        \n      }\n\n    async componentDidMount(){\n        //we wait until the Dapp loads the wallet.\n        const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n        while(!this.props.address){\n          await sleep(500);  \n        }\n        \n        //we get all the NFT Ids\n        //if(!this.state.mywallet){\n          await this.getNFTids();\n        //}\n\n        //we create an empty array to store the NFTs available to mint\n        const ids_to_mint =[];\n        //we iterate through the list in the local database and only push\n        //the Id if it hasn't been minted yet\n        for (const [key, value] of Object.entries(this.props.nftsForMint)) {\n            if( !( this.state.ids.includes(key.toLowerCase()) ) ){\n                ids_to_mint.push(key);\n            }\n        }\n\n        //we store the ids to mint in the state of the component.\n        await this.setState({ids: ids_to_mint});\n        //also, there is no filter yet, therefore the filtered NFTs are all\n        //the original NFTs to mint.\n        await this.setState({filteredIds: ids_to_mint});\n        \n        //if we receive a different pageSize, we set it.\n        if(this.props.pageSize){\n            if(this.props.pageSize != this.state.pageSize){\n                this.setState({pageSize: this.props.pageSize});\n        }}\n        //finally, we request the blockchain for the data of the NFTs\n        //, but only the ones that we need to display.\n        await this.getPageData();\n        await this.setState({mounted: true});\n        \n        \n    }\n\n    listView(){\n        this.setState({view:1});\n    }\n    albumView(){\n        this.setState({view:0});\n    }\n\n    \n\n    //let intersection = arrA.filter(x => arrB.includes(x));\n    //let union = [...new Set([...arrA, ...arrB])];\n    filterNFTs(_byTopic, _byArtist, _byLanguage){\n      let filteredByTopic = [];\n      let filteredByArtist = [];\n      let filteredByLanguage = [];\n      let filteredResult = [];\n\n      if(_byTopic.length>0){\n        console.log(\"filtering by topic...\");\n        let thisTopic;\n        _byTopic.map( (_topic) => {\n            try{\n              thisTopic = this.DB.topic[_topic];\n            }catch{\n              thisTopic =[]\n            }\n            filteredByTopic = [...new Set([...filteredByTopic, ...thisTopic])];\n            console.log(\"filteredByTopic: \",filteredByTopic);\n        })\n      }else{\n        filteredByTopic = this.state.ids;\n      }\n\n      if(_byArtist.length>0){\n        console.log(\"filtering by artist...\");\n        let thisArtist;\n        _byArtist.map( (_artist) => {\n            try{\n              thisArtist = this.DB.artist[_artist];\n            }catch{\n              thisArtist =[]\n            }\n            filteredByArtist = [...new Set([...filteredByArtist, ...thisArtist])];\n            console.log(\"filteredByArtist: \",filteredByArtist);\n        })\n      }else{\n        filteredByArtist = this.state.ids;\n      }\n\n      if(_byLanguage>=0){\n        console.log(\"filtering by language...\");\n        filteredByLanguage = this.DB.language[_byLanguage];\n        console.log(\"filteredByLanguage: \",filteredByLanguage);\n      }else{\n        filteredByLanguage = this.state.ids;\n      }\n\n      //intersection of all three results:\n      filteredResult = filteredByTopic.filter(x => filteredByArtist.includes(x));\n      filteredResult = filteredResult.filter(x => filteredByLanguage.includes(x));\n\n      const finalResult =  (this.state.ids).filter(x => filteredResult.includes(x));\n      this.setState({filteredIds:finalResult}, () => {\n        this.getPageData();\n      });\n      \n    }\n\n\n    componentDidCatch(){\n        const demo_NFT = {\"description\": \"error\",\"external_url\": \"unkown\",\"image\": \"loading\",\"name\": \"error\",\"attributes\": [ {\"artist\": \"loading\"},{\"webpage\":\"https://github.com/oscarsernarosero?tab=overview&from=2021-04-01&to=2021-04-27\"}],forSale:false}\n        this.setState({nfts: [demo_NFT]});\n      }\n\n\n    async changeCurrentPage(numPage) {\n        this.setState({ page: numPage });\n        console.log(\"change to page\",this.state.page);\n        await this.getPageData();\n        //I am doing this double because it doesn't work if I do it once.\n        this.setState({ page: numPage });\n        console.log(\"change to page\",this.state.page);\n        await this.getPageData();\n      };\n\n    async getPageData(){\n        const startAt = this.state.pageSize * (this.state.page-1);\n        const endAt = startAt + this.state.pageSize;\n        const pageIds = this.state.filteredIds.slice(startAt,endAt);\n        \n        const nfts = [];\n        for(let i=0; i<pageIds.length;i++){\n            const data = this.props.nftsForMint[pageIds[i]];\n            const price = await this.props.getPrice(pageIds[i]);\n            data[\"price\"] = price._hex; \n            data[\"id\"] = pageIds[i];\n            data[\"forSale\"] = true;\n            nfts.push(data);\n        }\n        this.setState({nfts: nfts});\n        console.log(\"nfts final pagination: \",this.state.nfts);\n    }\n    \n      async getNFTids(){\n        let ids = await this.props.getAllNFTsIdsOnly();\n        this.setState({ids: ids});\n        console.log(\"getNFTids formint: \",ids);\n\n      }\n      \n      render(){\n        console.log(\"rendering from PaginationForMinting\");\n        return (\n            <div >\n                <div>\n                    <h2>Mint New NFTs</h2>\n                </div>\n                <div>\n                    <p>By minting new NFT you have the privilage of inmortalizing yourself\n                        in the blockchain by setting a message for your NFT. This message will live for\n                        ever in the Ethereum netwrok. Don't miss this opportunity!</p>\n                </div>\n                <div>\n                <button onClick={this.listView} \n                    className={this.state.view ? \"grid-active\": \"grid-inactive\"}>\n                      <CgViewGrid style={{verticalAlign:\"middle\", fontSize:\"1.25rem\"}}\n                    />&nbsp;Grid</button>\n                    <button onClick={this.albumView}\n                    className={!this.state.view ? \"cover-active\": \"cover-inactive\"}>\n                      <CgUiKit style={{verticalAlign:\"middle\",fontSize:\"1.25rem\"}}\n                    />&nbsp;Cover</button>\n                </div>\n                <div>\n                  <Filter\n                  applyFilter = {(_byTopic, _byArtist, _byLanguage) => {\n                    return this.filterNFTs(_byTopic, _byArtist, _byLanguage)}}/>\n                </div>\n               <div className={this.state.view ? \"\": \"not-visible\"}>\n               <ul className=\"list\">\n                {this.state.nfts.map((item,index)=>{\n                    return <li className=\"galleryItem\"\n                    key={index}>\n                        <ImageNFT\n                            address = {this.props.address}\n                            marketPlaceAddress = {this.props.marketPlaceAddress}\n                            uri = {item}\n                            setTokenMessage={ (_tokenId, _msg ) => {\n                                return this.props.setTokenMessage(_tokenId, _msg );\n                            }}\n                            mywallet = {this.props.mywallet}\n                            setForSale = { (tokenId, forSale) => {\n                                return this.props.setForSale(tokenId, forSale);\n                              }}\n                              setSelectedId = {(id, imageUrl, price) => {\n                                return this.props.setSelectedId(id, imageUrl), price;\n                            }}\n                            setPrice = { (price, tokenId) => {\n                                return this.props.setPrice(price, tokenId);\n                              }}\n                              waitForMinedConfirmation={ (tx_hash, func) => {\n                                return this.props.waitForMinedConfirmation(tx_hash, func);\n                              }}\n                              forMint={true}\n                              marketPlaceAddress = {this.props.marketPlaceAddress}\n                              to = {this.props.to}\n                              waitForMinedConfirmation={ (tx_hash, func) => {\n                                return this.props.waitForMinedConfirmation(tx_hash, func);\n                              }}\n                        /></li>\n                })}\n                </ul>\n                </div>\n                <div className={this.state.view ? \"not-visible\":\"\" }>\n                <Carousel\n                    nfts={this.state.nfts}\n                    address = {this.props.address}\n                    marketPlaceAddress = {this.props.marketPlaceAddress}\n                    setTokenMessage={ (_tokenId, _msg ) => {\n                        return this.props.setTokenMessage(_tokenId, _msg );\n                    }}\n                    mywallet = {this.props.mywallet}\n                    setForSale = { (tokenId, forSale) => {\n                        return this.props.setForSale(tokenId, forSale);\n                      }}\n                      setSelectedId = {(id, imageUrl, price) => {\n                        return this.props.setSelectedId(id, imageUrl), price;\n                    }}\n                    setPrice = { (price, tokenId) => {\n                        return this.props.setPrice(price, tokenId);\n                      }}\n                      waitForMinedConfirmation={ (tx_hash, func) => {\n                        return this.props.waitForMinedConfirmation(tx_hash, func);\n                      }}\n                      forMint={true}\n                      marketPlaceAddress = {this.props.marketPlaceAddress}\n                      to = {this.props.to}\n                  />\n                </div>     \n                \n                <div className=\"centered\">\n                    <Pagination\n                    currentPage={this.state.page}\n                    sizePerPage={this.state.pageSize}\n                    totalSize={this.props.mywallet ? this.state.myIds.length : this.state.ids.length}\n                    changeCurrentPage={this.changeCurrentPage}\n                    />\n                    </div>\n                      \n              </div>\n            );\n        }\n}","import React from \"react\";\nimport { PaginationForMinting } from \"./PaginationForMinting\";\nimport \"../../style/gallery.css\";\nconst fs = require(\"fs\");\n\n\nexport class ForMinting extends React.Component{\n\n    constructor(props){\n        super(props);\n        //HERE IS WHERE WE SETUP THE NFTs FOR MINTING\n        const files = require(\"../../localDB/uri_files.json\");\n        let forMint = {};\n\n        Object.entries(files).map( ([key,value],index) => {\n          \n            const uri = require(\"../../uris/\"+value+\".json\");\n            forMint[key]=uri;\n          });\n\n        this.state = {nftsForMint: forMint, mounted:false};\n    }\n\n    componentDidMount(){\n      this.setState({mounted:true});\n    }\n\n  \n\n  render(){\n\n    if(this.state.mounted){\n      console.log(\"rendering from ForMinting\");\n      return (\n        <div className=\"gallery\">\n            <PaginationForMinting\n            nftsForMint={this.state.nftsForMint}\n            mywallet = {false}\n            {...this.props}\n            />\n           \n            </div>\n  \n          );\n    }else{\n      return <div></div>\n    }\n    \n    }\n}","import React from \"react\";\nimport { PaginationNFTs } from \"./PaginationNFTs\";\nimport { ForMinting } from \"./ForMinting\";\nimport \"../../style/gallery.css\";\n\nexport class Gallery extends React.Component{\n\n  \n  render(){\n    return (\n      <div className=\"gallery\">\n          <PaginationNFTs\n          marketPlaceAddress = {this.props.marketPlaceAddress}\n          address = {this.props.address}\n          getNFTData={ (id) => {\n              return this.props.getNFTData(id);\n          }}\n          getNFTidsByAddress={(address) => {\n              return this.props.getNFTidsByAddress(address);\n          }}\n          getAllNFTsIdsOnly = { () => {\n              return this.props.getAllNFTsIdsOnly();\n          }}\n          mywallet = {false}\n          waitForMinedConfirmation={ (tx_hash, func) => {\n            return this.props.waitForMinedConfirmation(tx_hash, func);\n          }}\n          to = {this.props.to}\n          />\n\n\n        <ForMinting\n          marketPlaceAddress = {this.props.marketPlaceAddress}\n          address = {this.props.address}\n          getAllNFTsIdsOnly = { () => {\n              return this.props.getAllNFTsIdsOnly();\n          }}\n          mywallet = {false}\n          to = {this.props.to}\n          getPrice = { (tokenId) => {\n            return this.props.getPrice( tokenId);\n          }}\n          waitForMinedConfirmation={ (tx_hash, func) => {\n            return this.props.waitForMinedConfirmation(tx_hash, func);\n          }}\n          />\n         \n          </div>\n\n          \n\n        );\n    }\n}","import React from \"react\";\nimport { PaginationNFTs } from \"../Gallery/PaginationNFTs\"\nimport \"../../style/myNFTs.css\";\nimport { ImageNFT } from \"../Gallery/ImageNFT\";\n\n\n  export class MyNFTs extends React.Component{\n\n      render(){\n        return (\n            <div className=\"gallery\">\n                <div className=\"title-my-nfts\">\n                    My NFTs\n                </div>\n\n                <PaginationNFTs\n                mywallet = {true}\n                {...this.props}\n            />\n              </div>\n            );\n        }\n}","import React from \"react\";\nimport { MyNFTs } from \"./MyNFTs\";\nimport { Balance } from \"./Balance\";\n\nexport class MyWallet extends React.Component{\n\n    constructor(props){\n        super(props);\n        console.log(props);\n    }\n\n  \n  \n  render(){\n    return (\n        <div >\n            <MyNFTs \n                getNFTsByAddress = {(address) => {\n                    return this.props.getNFTsByAddress(address);\n                }}\n                address = {this.props.address}\n                setTokenMessage={ (_tokenId, _msg ) => {\n                    return this.props.setTokenMessage(_tokenId, _msg );\n                  }}\n                setForSale = { (tokenId, forSale) => {\n                    return this.props.setForSale(tokenId, forSale);\n                  }}\n                setSelectedId = {(id, imageUrl, price) => {\n                    return this.props.setSelectedId(id, imageUrl, price);\n                }}\n                setPrice = { (price, tokenId) => {\n                    return this.props.setPrice(price, tokenId);\n                  }}\n                getNFTData={ (id) => {\n                    return this.props.getNFTData(id);\n                }}\n                getNFTidsByAddress={(address) => {\n                    return this.props.getNFTidsByAddress(address);\n                }}\n                getAllNFTsIdsOnly = { () => {\n                    return this.props.getAllNFTsIdsOnly();\n                }}\n                waitForMinedConfirmation={ (tx_hash, func) => {\n                    return this.props.waitForMinedConfirmation(tx_hash, func);\n                  }}\n                  safeTransfer = { (owner, to, tokenId) => {\n                    return this.props.safeTransfer(owner, to, tokenId);\n                  }}\n            />\n            \n        </div>\n        );\n    }\n}","import React from \"react\";\nimport \"../../style/balance.css\";\n\nexport class Balance extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {amount: \"\", balance: \"\",txHash: \"\"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getBalance = this.getBalance.bind(this);\n    this.getMax = this.getMax.bind(this);\n    \n  }\n  async componentDidMount() {\n      const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n      await sleep(1000);   \n      this.getBalance();\n}\n\ncomponentDidUpdate(prevProps){\nif(prevProps.address !== this.props.address){\n    this.getBalance();\n    console.log(\"update address\");\n}\n}\n\n    async getBalance(){\n        console.log(this.props);\n        const balance =  await this.props.getUserBalance(this.props.address);\n        console.log(\"got balance: \",parseInt(balance._hex));\n        if(balance.error){\n        this.setState({balance: \"Oops! Somethig went wrong. Try again later.\"});\n        }else{\n        this.setState({balance: parseInt(balance._hex)/1000000000000000000});\n        }\n    }\n\nhandleChange(event) {\n    this.setState({amount: event.target.value});\n  }\n\n  async getMax(event){\n    console.log(\"getMax activated\");\n    let max = await this.props.getUserBalance(this.props.address);\n    max-=1;\n    this.setState({amount: parseInt(max)});\n}\n\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const amount = this.state.amount;\n\n\n    \n    this.setState({txHash: \"...\"});\n    console.log(this.props);\n    const txHash =  await this.props.withdrawUserFunds(amount.toString());\n    console.log(\"got txHash: \",txHash);\n    if(txHash.error){\n    this.setState({txHash: \"Oops! Somethig went wrong. Try again later.\"});\n    }else{\n    this.setState({txHash: txHash.hash});\n    }\n  }\n\n  render(){\n    return (\n        <div className=\"balance-component-container\">\n            \n            <div className=\"balance-container\">\n                <div className=\"label-balance\" >\n                    Your balance:\n                </div>\n                <div className=\"balance-display\">\n                    {this.state.balance} ETH\n                </div>\n            </div>\n\n            <div className=\"withdraw-container\">\n                <button onClick ={this.getMax} className=\"btn btn-helper\">\n                    Withdraw Max Value</button>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-withdraw\">\n                    \n                        <label>Amount</label>\n                        <input\n                        className=\"form-control-withdraw\"\n                        type=\"number\"\n                        step=\"1\"\n                        name=\"amount\"\n                        onChange={this.handleChange}\n                        value={this.state.amount}\n                        required\n                        />\n                        <label ClassName = \"tx-hash-balance\">txHash: {this.state.txHash}</label>\n                    </div>\n                    <div className=\"form-withdraw\">\n                        <input className=\"button-center\" type=\"submit\" value=\"Withdraw From Marketplace\" />\n                    </div>\n                </form>\n            </div>\n      </div>\n        );\n    }\n}","import React from \"react\";\nimport { Popup } from \"../Generics/Popup\";\nimport \"../../style/set-message.css\"\n\n\nexport class SetMessage extends React.Component{\n\n    constructor(props){\n        super(props);\n        console.log(props);\n        \n        this.state = {msg: \"\", txHash: \"\", count:0,\n        popupVisible: false, waiting:false, successful:false};\n    \n        this.handleChangeMsg = this.handleChangeMsg.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.closePopup = this.closePopup.bind(this);\n    \n        this.msgInput = React.createRef();\n        this.container = React.createRef();\n     \n      }\n\n    //   componentDidMount(){\n    //     this.container.Style.Add(\"background-image\", \"\");\n    //   }\n      handleChangeMsg(event) {\n        this.setState({msg: event.target.value, count: event.target.value.length});\n        \n      }\n\n      closePopup(){\n        this.setState({popupVisible:false});\n      }\n    \n    \n      async handleSubmit(event) {\n        event.preventDefault();\n\n        const msg = this.state.msg;\n        const tokenId = this.props.id;\n        console.log(\"msg: \",msg,\" tokenId: \",tokenId);\n        \n        this.setState({popupVisible: true});\n        console.log(\"about to send tx\");\n        const tx =  await this.props.setTokenMessage(tokenId, msg );\n        this.setState({waiting: true});\n        console.log(tx);\n        if (tx.error){\n            this.setState({forSale: !this.state.forSale});\n            this.setState({txHash: tx});\n            this.setState({waiting: false});\n          }else{\n            this.setState({forSale: !this.state.forSale});\n            this.setState({txHash: tx.hash});\n            const res = await this.props.waitForMinedConfirmation(tx.hash, (tx) => {\n            this.setState({waiting: false});\n            this.setState({successful: true});\n            console.log(\"tx mined: \", tx.hash);\n            const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n            const currentUrl = window.location.href;\n            console.log(\"currentUrl\", currentUrl);\n            console.log(\"currentUrl.length\", currentUrl.length);\n            console.log(\"currentUrl.length substring\", currentUrl.substring((currentUrl.length-10)));\n            const walletUrl = currentUrl.substring(0,(currentUrl.length-10))+\"wallet\";\n            sleep(3000).then( () => window.location.href = walletUrl).catch( error => console.log(\"error while reloading:\",error));\n                \n          })\n            console.log(\"changed forSale in tx: \",tx.hash);\n        }  \n      }\n  \n  render(){\n    return (\n        <div style={\n            {backgroundImage: \n                'url(' + this.props.imageUrl + ') ',\n                backgroundRepeat: \"no-repeat\",\n                backgroundSize: \"cover\",\n                backgroundAttachment: \"fixed\"\n            }\n                } >\n            <div className=\"title justify-center\">\n                Set The Message Of Your NFT\n                </div>\n            <div className=\"paragraph\">\n                Congratulations! You, as the owner of a NMWD NFT token, have the privilage of inmortalizing yourself with a message that will live for ever in the blockchain.\n                Be careful though. This message cannot be changed ever again once you submit it. Also, take into account that the message cannot be longer than 100 characters.\n                Welome to the inmortal phase of your thoughts!\n                </div>\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\n                <div className=\"set-message\">\n                    <div className=\"justify-center message-label\">\n                       Message:\n                    </div>\n                    <div>\n                        <textarea rows = \"4\" cols = \"70\" maxLength = \"250\" placeholder=\"Welcome to inmortality\"\n                            id=\"text-area\"\n                            className=\"message-input\"\n                            onChange={this.handleChangeMsg}\n                            ref={this.msgInput}\n                            required\n                            ></textarea>\n                    </div>\n                    <div className=\"tx-hash-counter-container\">\n                        <div className=\"tx-hash\">\n                        <label >Tx Hash: {this.state.txHash}</label>\n                        </div>\n                        <div id=\"the-count\">\n                            <span id=\"current\" className=\"counter-text\">{this.state.count}/250</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <input className=\"mybutton\" type=\"submit\" value=\"Set Message\" />\n                </div>\n            </form>\n\n            <Popup \n            visible = {this.state.popupVisible}\n            txHash={this.state.txHash}\n            waiting={this.state.waiting}\n            successful = {this.state.successful}\n            close = {()=>{this.closePopup()}}\n          />\n        </div>\n        );\n    }\n}","import React from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\n\n// We'll use ethers to interact with the Ethereum network and our contract\nimport { ethers } from \"ethers\";\n\n// We import the contract's artifacts and address here, as we are going to be\n// using them with ethers\nimport NMWDArtifact from \"../contracts/Token_StopTheWarOnDrugs.json\";\nimport NMWDAddress from \"../contracts/contract-address-StopTheWarOnDrugs.json\";\nimport MarketPlaceArtifact from \"../contracts/Token_NMWDMarketPlace.json\";\nimport MarketPlaceAddress from \"../contracts/contract-address-NMWDMarketPlace.json\";\n\n// components\nimport {TokenContract} from \"./TokenContract/TokenContract\"\nimport { NavBar } from \"./Header/NavBar\";\nimport { WalletStatus } from \"./Header/WalletStatus\";\nimport { Marketplace } from \"./Marketplace/Marketplace\";\nimport { Home } from \"./Info/Home\";\nimport { Overview } from \"./Info/Overview\";\nimport { Gallery } from \"./Gallery/Gallery\";\nimport { MyWallet} from \"./MyWallet/MyWallet\";\nimport { SetMessage } from \"./MyWallet/SetMessage\";\nimport { NewUri } from  \"./NewUri/NewUri\";\n\n\n// This is the Hardhat Network id, you might change it in the hardhat.config.js\n// Here's a list of network ids https://docs.metamask.io/guide/ethereum-provider.html#properties\n// to use when deploying to other networks.\nconst HARDHAT_NETWORK_ID = '31337';\n//const HARDHAT_NETWORK_ID = '1337';\n\n//let firstTime = true;\n\n// This is an error code that indicates that the user canceled a transaction\nconst ERROR_CODE_TX_REJECTED_BY_USER = 4001;\n\n// This component is in charge of doing these things:\n//   1. It connects to the user's wallet\n//   2. Initializes ethers and the Token contract\n//   3. Polls the user balance to keep it updated.\n//   4. Transfers tokens by sending transactions\n//   5. Renders the whole application\n//\n// Note that (3) and (4) are specific of this sample application, but they show\n// you how to keep your Dapp and contract's state in sync,  and how to send a\n// transaction.\nexport class Dapp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // We store multiple things in Dapp's state.\n    // You don't need to follow this pattern, but it's an useful example.\n    this.initialState = {\n      // The info of the token (i.e. It's Name and symbol)\n      tokenData: undefined,\n      // The user's address and balance\n      selectedAddress: undefined,\n      balance: undefined,\n      // The ID about transactions being sent, and any possible error with them\n      txBeingSent: undefined,\n      transactionError: undefined,\n      networkError: undefined,\n      owner: undefined,\n      index_Id: undefined,\n      nfts: undefined\n    };\n\n    this.state = this.initialState;\n  }\n\n  render() {\n    \n    return (\n      <Router>\n        <div> \n          <NavBar/>\n          <WalletStatus\n            connected={this.state.selectedAddress}\n            address={this.state.selectedAddress}\n            connectWallet={() => this._connectWallet()} \n            networkError={this.state.networkError}\n            dismiss={() => this._dismissNetworkError()}\n          />\n          <div>\n            <switch>\n              <Route path=\"/\" exact \n                component={Home}/>\n             \n                <Route path=\"/overview\"  \n                component={Overview}/>\n                \n              <Route path=\"/tokenContract\"\n                render = {\n                  (props)=>\n                  <TokenContract \n                    selectedAddress = {this.state.selectedAddress}\n                    txBeingSent={this.state.txBeingSent}\n                    transactionError={this.state.transactionError}\n                    _getRpcErrorMessage={(error)=>{\n                      return this._getRpcErrorMessage(error)}}\n                    _dismissTransactionError={()=>{\n                        return this._dismissTransactionError();\n                      }} \n                    safeTransferFrom={ (owner, to, tokenId) => {\n                        return this.safeTransferFrom(owner, to, tokenId);\n                    }}\n                    getOwnerOf={ (id) => {\n                      return this.getOwnerOf(id);\n                    }}\n                    approve={ (address, id) => {\n                      return this.approve(address, id);\n                    }}\n                    setApprovalForAll={ (address, approve) => {\n                      return this.setApprovalForAll(address, approve);\n                    }}\n                    idToOwnerIndex={ (owner, index) => {\n                      return this.idToOwnerIndex(owner, index);\n                    }}\n                    tokenByIndex={  (index) => {\n                      return this.tokenByIndex(index);\n                    }} \n                    tokenMessage={  (id) => {\n                      return this.tokenMessage(id);\n                    }}\n                    tokenURI={ (_tokenId ) => {\n                    return this.tokenURI(_tokenId);\n                    }}\n                    setTokenMessage={ (_tokenId, _msg ) => {\n                      return this.setTokenMessage(_tokenId, _msg );\n                    }}\n                    mint={ (_to, _tokenId, royaltyRecipient, royaltyValue) => {\n                      return this._mint(_to, _tokenId,  royaltyRecipient, royaltyValue);\n                    } }\n                    owner = {this.state.owner}\n                    />\n                 }\n                />\n              <Route path=\"/marketplace\" \n                render={(props)=>\n                  <Marketplace\n                    updateNMWDContract={ (address) => {\n                      return this.updateNMWDContract(address);\n                      } \n                    }\n                    approveNMWD = {() => {\n                      return this.approveNMWD();\n                    }}\n                    transferOwnership = { (to) => {\n                      return this.transferOwnership(to);\n                      }\n                    }\n                    NFTAddress={NMWDAddress.Token}\n                    MarketplaceAddress={MarketPlaceAddress.Token}\n                    setPrice = { (price, tokenId) => {\n                      return this.setPrice(price, tokenId);\n                    }}\n                    getPrice = { (tokenId) => {\n                      return this.getPrice( tokenId);\n                    }}\n                    marketPlaceApprove={ (_tokenId) => {\n                      return this.props.approveNMWD(_tokenId);\n                    } }\n                    of = {this.state.selectedAddress}\n                    marketPlaceAddress = {MarketPlaceAddress.Token}\n                    to = {this.state.selectedAddress}\n                    withdrawUserFunds = { (amount) => {\n                      return this.withdrawUserFunds( amount);\n                    }}\n                    getUserBalance = { (_address) => {\n                      return this.getUserBalance(_address);\n                    }}\n                    selectedAddress = {this.state.selectedAddress}\n                    setForSale = { (tokenId, forSale) => {\n                      return this.setForSale(tokenId, forSale);\n                    }}\n                    getForSale = { (tokenId) => {\n                      return this.getForSale( tokenId);\n                    }}\n                    getContractBalance = { () => {\n                      return this.getContractBalance();\n                    }}\n                    withdrawFromContract = { (to, amount) => {\n                      return this.withdrawFromContract(to, amount);\n                    }}\n                    getBackOwnership ={ () => {\n                      return this.getBackOwnership();\n                    }}\n                    getAllNFTs = { () => {\n                    return this.getAllNFTs();\n                    }\n                    }\n                  />\n                }\n              />\n              <Route path=\"/gallery\" \n                render={(props)=>\n                  <Gallery\n                    \n                    address = {this.state.selectedAddress}\n                    marketPlaceAddress = {MarketPlaceAddress.Token}\n\n                    getNFTData={ (id) => {\n                      return this.getNFTData(id);\n                    }}\n                    getNFTidsByAddress={(address) => {\n                      return this.getNFTidsByAddress(address);\n                    }}\n                    getAllNFTsIdsOnly = { () => {\n                      return this.getAllNFTsIdsOnly();\n                    }}\n\n                    marketPlaceAddress = {MarketPlaceAddress.Token}\n                    to = {this.state.selectedAddress}\n                    getPrice = { (tokenId) => {\n                      return this.getPrice( tokenId);\n                    }}\n                    waitForMinedConfirmation={ (tx_hash, func) => {\n                      return this.waitForMinedConfirmation(tx_hash, func);\n                    }}\n                  />\n                }\n              />\n              <Route path=\"/wallet\" \n                render={(props)=>\n                  <MyWallet\n                    getNFTsByAddress = {(address) => {\n                      return this.getNFTsByAddress(address);\n                  }}\n                  address = {this.state.selectedAddress}\n                  setTokenMessage={ (_tokenId, _msg ) => {\n                    return this.setTokenMessage(_tokenId, _msg );\n                  }}\n                  setForSale = { (tokenId, forSale) => {\n                    return this.setForSale(tokenId, forSale);\n                  }}\n                  setSelectedId = {(id, imageUrl, price) => {\n                    this.setSelectedId(id, imageUrl, price);\n                  }}\n                  setPrice = { (price, tokenId) => {\n                    return this.setPrice(price, tokenId);\n                  }}\n                  getUserBalance = { (_address) => {\n                    return this.getUserBalance(_address);\n                  }}\n                  withdrawUserFunds = { (amount) => {\n                    return this.withdrawUserFunds( amount);\n                  }}\n                  getNFTData={ (id) => {\n                    return this.getNFTData(id);\n                  }}\n                  getNFTidsByAddress={(address) => {\n                    return this.getNFTidsByAddress(address);\n                  }}\n                  getAllNFTsIdsOnly = { () => {\n                    return this.getAllNFTsIdsOnly();\n                  }}\n                  waitForMinedConfirmation={ (tx_hash, func) => {\n                    return this.waitForMinedConfirmation(tx_hash, func);\n                  }}\n                  safeTransfer = { (owner, to, tokenId) => {\n                    return this.safeTransferFrom(owner, to, tokenId);\n                  }}\n                  />\n                }\n              />\n              <Route path=\"/setmessage\" \n                render={(props)=>\n                  <SetMessage\n                  address = {this.state.selectedAddress}\n                  setTokenMessage={ (_tokenId, _msg ) => {\n                    return this.setTokenMessage(_tokenId, _msg );\n                  }}\n                  id = {this.state.selectedId}\n                  imageUrl = {this.state.imageUrl}\n                  waitForMinedConfirmation={ (tx_hash, func) => {\n                    return this.waitForMinedConfirmation(tx_hash, func);\n                  }}\n                  />\n                }\n              />\n              \n              <Route path=\"/new_uri\" \n              render={(props)=>\n                  <NewUri/>}\n                  />\n            </switch>\n            </div>\n          </div>\n        </Router>\n    );\n  }\n\n  componentWillUnmount() {\n    // We poll the user's balance, so we have to stop doing that when Dapp\n    // gets unmounted\n    //this._stopPollingData();\n  }\n\n  async _connectWallet() {\n    // This method is run when the user clicks the Connect. It connects the\n    // dapp to the user's wallet, and initializes it.\n\n    // To connect to the user's wallet, we have to run this method.\n    // It returns a promise that will resolve to the user's address.\n    //const [selectedAddress] = await window.ethereum.enable();\n    const [selectedAddress] = await window.ethereum.request({ method: 'eth_requestAccounts' }) \n    console.log(selectedAddress);\n    // Once we have the address, we can initialize the application.\n\n    // First we check the network\n    // if (!this._checkNetwork()) {\n    //   return;\n    // }\n\n    this._initialize(selectedAddress);\n    \n\n    // We reinitialize it whenever the user changes their account.\n    window.ethereum.on(\"accountsChanged\", ([newAddress]) => {\n      //this._stopPollingData();\n      // `accountsChanged` event can be triggered with an undefined newAddress.\n      // This happens when the user removes the Dapp from the \"Connected\n      // list of sites allowed access to your addresses\" (Metamask > Settings > Connections)\n      // To avoid errors, we reset the dapp state \n      if (newAddress === undefined) {\n        return this._resetState();\n      }\n      \n      this._initialize(newAddress);\n    });\n    \n    // We reset the dapp state if the network is changed\n    //window.ethereum.on(\"networkChanged\", ([networkId]) => {\n    window.ethereum.on(\"chainChanged\", (_chainId) => {\n      console.log(\"chain changed: \",_chainId);\n      //this._stopPollingData();\n      this._resetState();\n    });\n    return this.state.selectedAddress;\n  }\n\n  async _initialize(userAddress) {\n    // This method initializes the dapp\n\n    // We first store the user's address in the component's state\n    console.log(userAddress);\n    this.setState({\n      selectedAddress: userAddress,\n    });\n\n    // Then, we initialize ethers, fetch the token's data, and start polling\n    // for the user's balance.\n\n    // Fetching the token data and the user's balance are specific to this\n    // sample project, but you can reuse the same initialization pattern.\n    this._intializeEthers();\n    console.log(\"initialized\");\n    this.getContractOwner();\n    console.log(\"got contract owner\");\n    this._getTokenData();\n    console.log(\"got token data\");\n    //this.getAllNFTs();\n    //this._startPollingData();\n\n    //automating the process of loading the address of the token to the market place\n    //and transfering ownership of the NFT contract to the market place.\n    // if(firstTime){\n    //   this.updateNMWDContract(NMWDAddress.Token);\n    //   this.transferOwnership(MarketPlaceAddress.Token);\n    //   firstTime = false;\n    // }\n    console.log(\"before return\",this.state.selectedAddress)\n    \n  }\n\n  async _intializeEthers() {\n    // We first initialize ethers by creating a provider using window.ethereum\n    this._provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    this._nmwd = new ethers.Contract(\n      NMWDAddress.Token,\n      NMWDArtifact.abi,\n      this._provider.getSigner(0)\n    );\n\n    this.marketPlace = new ethers.Contract(\n      MarketPlaceAddress.Token,\n      MarketPlaceArtifact.abi,\n      this._provider.getSigner(0)\n    );\n\n  }\n\n  setSelectedId(id, imageUrl, price){\n    this.setState({selectedId:id, imageUrl: imageUrl, price: price});\n  }\n\n  async waitForMinedConfirmation(tx_hash, func){\n    return this._provider.once(tx_hash, func);\n  }\n\n  async getContractOwner(){\n    const owner = await this._nmwd.owner();\n    this.setState({ owner:  owner });\n  }\n\n  async idToOwnerIndex(owner, index){\n    try{\n      return await this._nmwd.tokenOfOwnerByIndex( owner, index);\n    }catch(error){\n      console.log(error);\n      return {error: \"Invalid Index\"} \n    }\n  }\n\n  async getOwnerOf(id){\n    try{\n      return await this._nmwd.ownerOf(id);\n    }catch(error){\n      console.log(error);\n      return {error: \"Invalid Id\"} \n    }\n  }\n\n   async tokenByIndex(index){\n     try{\n      return await this._nmwd.tokenByIndex(index);\n     }catch(error){\n      console.log(error);\n       return {error: \"Invalid Index\"}\n     }\n  }\n\n  async tokenURI(tokenId){\n    try{\n     return await this._nmwd.tokenURI(tokenId);\n    }catch(error){\n     console.log(error);\n      return {error: \"Invalid Id.\"}\n    }\n }\n\n   async safeTransferFrom(owner, to, tokenId){\n    try{\n      //console.log(Object.keys(this._nmwd));\n      return await this._nmwd[\"safeTransferFrom(address,address,uint256)\"](owner, to, tokenId);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async approve(address, tokenId){\n    try{\n      return await this._nmwd.approve(address, tokenId);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n   \n   async setApprovalForAll(address, approve){\n    try{\n      return await this._nmwd.setApprovalForAll(address, approve);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async royaltyInfo(tokenId){\n    try{\n      return await this._nmwd.royaltyInfo(tokenId, 10000);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n   \n\n   async setTokenMessage(tokenId, msg ){\n    try{\n      return await this._nmwd.setTokenMessage(tokenId, msg);\n    }catch(error){\n      console.log(error);\n      return {error: \"Invalid Input\"} \n    }\n  }\n\n  async tokenMessage(id){\n    try{\n      return await this._nmwd.tokenMessage(id);\n    }catch(error){\n      console.log(error);\n      return {error: \"Invalid Id\"} \n    }\n  }\n\n  async transferOwnership(to){\n    try{\n      const tx = await this._nmwd.transferOwnership(to);\n      console.log(tx);\n      await tx.wait();\n      return tx;\n    }catch(error){\n      console.log(error);\n      return {error: \"error while transfering ownership\"} \n    }\n  }\n\n async getNFTidsByAddress(address){\n  try{\n    const ids= await this._nmwd.getNFTsByAddress(address);\n    return ids;\n  }catch{\n    return {error: \"erro\"};\n  }\n  \n }\n\n  async getNFTsByAddress(address){\n    const nfts = [];\n    try{\n      const ids= await this._nmwd.getNFTsByAddress(address);\n     \n      for (let i=0;i<ids.length;i++){\n\n        const data = await this.getNFTData(ids[i]);\n        \n        nfts.push(data);\n        console.log(\"data.image: \",data.image);\n      }\n      console.log(\"final uri list owned by this address: \",nfts);\n      return nfts;\n\n      }catch(error){\n        console.log(error);\n         return {error: error.message};\n       }\n    \n   }\n\n   async getNFTData(id){\n        const uri = await this._nmwd.tokenURI(id);\n        const CID = uri.substring(7);\n        console.log(\"CID from uri: \",CID);\n        const pinata_uri_url = \"https://gateway.pinata.cloud/ipfs/\"+CID;\n        const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n        const response = await fetch(pinata_uri_url,);\n        await sleep(50);//we sleep for 50 ms to avoid the 429 (too many requests) error\n        console.log(\"response\",response);\n        const jsonData = await response.text();\n        console.log(\"jsonData \",jsonData);\n        const data = JSON.parse(jsonData);\n        const price = await this.marketPlace.getPrice(id);\n        data[\"price\"] = price._hex; \n        const message = await this._nmwd.tokenMessage(id);\n        data[\"message\"] = message;\n        data[\"royaltyInfo\"] = await this.royaltyInfo(id);\n        console.log(\"token with id: \",id);\n        console.log(\"Royalty info: \",data[\"royaltyInfo\"]);\n        console.log(\"Royalty info: \",data[\"royaltyInfo\"][0]);\n        console.log(\"Royalty info: \",data[\"royaltyInfo\"][1]._hex);\n        data[\"id\"] = id;\n        const forSale = await this.marketPlace.getForSale(id);\n        data[\"forSale\"] = forSale;\n        return data\n   }\n\n  async getUserBalance(address){\n    try{\n      return await this.marketPlace.getUserBalance(address);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async withdrawUserFunds(amount){\n    try{\n      return await this.marketPlace.withdrawUserFunds(amount);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async withdrawFromContract(to, amount){\n    try{\n      return await this.marketPlace.withdrawFromContract(to, amount);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async getContractBalance(){\n    try{\n      return await this.marketPlace.getMarketPlaceBalance();\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n  async getBackOwnership(){\n    try{\n      const tx = await this.marketPlace.getBackOwnership();\n      console.log(tx);\n      await tx.wait();\n      return tx;\n    }catch(error){\n      console.log(error);\n      return {error: \"error while transfering ownership\"} \n    }\n  }\n  async approveNMWD(tokenId){\n    try{\n      return await this.marketPlace.approveNMWD(tokenId);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async setPrice(price, tokenId){\n    try{\n      console.log(\"about to set price..\", price)\n      return await this.marketPlace.setPrice(price, tokenId);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async updateNMWDContract(address){\n    try{\n      return await this.marketPlace.updateNMWDcontract(address);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async getPrice(tokenId){\n    try{\n      return await this.marketPlace.getPrice(tokenId);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async setForSale(tokenId, forSale){\n    try{\n      return await this.marketPlace.setForSale(tokenId, forSale);\n      \n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async getForSale(tokenId){\n    try{\n      return await this.marketPlace.getForSale(tokenId);\n     }catch(error){\n      console.log(error);\n       return {error: error.message};\n     }\n   }\n\n   async getAllNFTsIdsOnly(){\n\n    let more=true;\n    let i=0;\n    const ids = [];\n    let id;\n    let _id;\n\n    while(more){\n      try{\n        _id = await this._nmwd.tokenByIndex(i);\n        //id = parseInt(_id._hex);\n        id = _id._hex;\n      }\n      catch{\n        more=false;\n        break;\n      }\n      ids.push(id);\n      i+=1;\n    }\n    console.log(\"from getAllNFTsIdsOnly; ids: \",ids);\n    return ids;\n   }\n\n   async getAllNFTs(){\n     let more=true;\n     let i=0;\n     const nfts = [];\n     let id;\n     let _id;\n     let myIds = [];\n\n     //first we need to know if I own some NFTs so I can desable \n     //the \"buy\" button\n     try{\n      let counter = 0;\n      //this is just me waiting for the wallet to get connected\n      while (!this.state.selectedAddress && counter<10){\n        const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n        await sleep(100);\n        counter++;\n      }\n      myIds = await this._nmwd.getNFTsByAddress(this.state.selectedAddress);\n      myIds = myIds.map( (_id) => {return parseInt(_id._hex);});\n      \n     }catch{\n       console.log(\"there was a problem while consulting NFTs owned by address \",\n       this.state.selectedAddress);\n     }\n     console.log(\"starting iteration of NFTs...\");\n      while(more){\n        try{\n          _id = await this._nmwd.tokenByIndex(i);\n          id = parseInt(_id._hex);\n        }\n        catch{\n          more=false;\n          break;\n        }\n        const data = await this.getNFTData(id);\n        data[\"owned\"] = myIds.includes(id);\n        nfts.push(data);\n        i+=1;\n      }\n      console.log(\"finished itereation of nfts at index \",i);\n      console.log(\"final uri list: \",nfts);\n       this.setState({nfts: nfts});\n       return nfts;\n   }\n\n\n  // The next to methods are needed to start and stop polling data. While\n  // the data being polled here is specific to this example, you can use this\n  // pattern to read any data from your contracts.\n  //\n  // Note that if you don't need it to update in near real time, you probably\n  // don't need to poll it. If that's the case, you can just fetch it when you\n  // initialize the app, as we do with the token data.\n  _startPollingData() {\n    this._pollDataInterval = setInterval(() => this._updateBalance(), 1000);\n\n    // We run it once immediately so we don't have to wait for it\n    this._updateBalance();\n  }\n\n  _stopPollingData() {\n    clearInterval(this._pollDataInterval);\n    this._pollDataInterval = undefined;\n  }\n\n  // The next two methods just read from the contract and store the results\n  // in the component state.\n  async _getTokenData() {\n    //const name = await this._token.name();\n    const name = \"No More War On Drugs\";\n    const symbol = \"NMWD\";\n\n   this.setState({ tokenData: { name: name, symbol: symbol } });\n  }\n\n  async _updateBalance() {\n    const balance = await this._token.balanceOf(this.state.selectedAddress);\n    this.setState({ balance });\n  }\n\n  // This method sends an ethereum transaction to transfer tokens.\n  // While this action is specific to this application, it illustrates how to\n  // send a transaction.\n  async _transferTokens(to, amount) {\n    // Sending a transaction is a complex operation:\n    //   - The user can reject it\n    //   - It can fail before reaching the ethereum network (i.e. if the user\n    //     doesn't have ETH for paying for the tx's gas)\n    //   - It has to be mined, so it isn't immediately confirmed.\n    //     Note that some testing networks, like Hardhat Network, do mine\n    //     transactions immediately, but your dapp should be prepared for\n    //     other networks.\n    //   - It can fail once mined.\n    //\n    // This method handles all of those things, so keep reading to learn how to\n    // do it.\n\n    try {\n      // If a transaction fails, we save that error in the component's state.\n      // We only save one such error, so before sending a second transaction, we\n      // clear it.\n      this._dismissTransactionError();\n\n      // We send the transaction, and save its hash in the Dapp's state. This\n      // way we can indicate that we are waiting for it to be mined.\n      const tx = await this._token.transfer(to, amount);\n      this.setState({ txBeingSent: tx.hash });\n\n      // We use .wait() to wait for the transaction to be mined. This method\n      // returns the transaction's receipt.\n      const receipt = await tx.wait();\n\n      // The receipt, contains a status flag, which is 0 to indicate an error.\n      if (receipt.status === 0) {\n        // We can't know the exact error that make the transaction fail once it\n        // was mined, so we throw this generic one.\n        throw new Error(\"Transaction failed\");\n      }\n\n      // If we got here, the transaction was successful, so you may want to\n      // update your state. Here, we update the user's balance.\n      await this._updateBalance();\n    } catch (error) {\n      // We check the error code to see if this error was produced because the\n      // user rejected a tx. If that's the case, we do nothing.\n      if (error.code === ERROR_CODE_TX_REJECTED_BY_USER) {\n        return;\n      }\n\n      // Other errors are logged and stored in the Dapp's state. This is used to\n      // show them to the user, and for debugging.\n      console.error(error);\n      this.setState({ transactionError: error });\n    } finally {\n      // If we leave the try/catch, we aren't sending a tx anymore, so we clear\n      // this part of the state.\n      this.setState({ txBeingSent: undefined });\n    }\n  }\n\n  async _mint(_to, _tokenId, royaltyRecipient, royaltyValue ){\n    try{\n      const tx = await this._nmwd.mint(_to, _tokenId, royaltyRecipient, royaltyValue );\n      console.log(tx);\n      await tx.wait();\n      return tx;\n    }catch(error){\n      console.log(error);\n      return {error: \"Invalid Id\"} \n    }\n  }\n\n  // This method just clears part of the state.\n  _dismissTransactionError() {\n    this.setState({ transactionError: undefined });\n  }\n\n  // This method just clears part of the state.\n  _dismissNetworkError() {\n    this.setState({ networkError: undefined });\n  }\n\n  // This is an utility method that turns an RPC error into a human readable\n  // message.\n  _getRpcErrorMessage(error) {\n    if (error.data) {\n      return error.data.message;\n    }\n\n    return error.message;\n  }\n\n  // This method resets the state\n  _resetState() {\n    this.setState(this.initialState);\n  }\n\n  // This method checks if Metamask selected network is Localhost:8545 \n  _checkNetwork() {\n    if (window.ethereum.networkVersion === HARDHAT_NETWORK_ID) {\n      return true;\n    }\n\n    this.setState({ \n      networkError: 'Please connect Metamask to Localhost:8545'\n    });\n\n    return false;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Dapp } from \"./components/Dapp\";\n\n// We import bootstrap here, but you can remove if you want\n//import \"bootstrap/dist/css/bootstrap.css\";\nimport \"./style/main.css\";\n\n\n// This is the entry point of your application, but it just renders the Dapp\n// react component. All of the logic is contained in it.\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dapp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}